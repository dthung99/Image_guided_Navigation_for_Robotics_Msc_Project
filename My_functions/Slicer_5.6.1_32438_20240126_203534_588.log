[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Session start time .......: 20240126_203534
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Slicer version ...........: 5.6.1 (revision 32438 / 117ce5f) win-amd64 - installed release
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Operating system .........: Windows /  Personal / (Build 22621, Code Page 65001) - 64-bit
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Memory ...................: 7834 MB physical, 12954 MB virtual
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - CPU ......................: GenuineIntel , 8 cores, 8 logical processors
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - VTK configuration ........: OpenGL2 rendering, TBB threading
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Qt configuration .........: version 5.15.2, with SSL, requested OpenGL 3.2 (compatibility profile)
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Internationalization .....: disabled, language=
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Developer mode ...........: enabled
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Application path .........: D:/Program/Slicer 5.6.1/bin
[DEBUG][Qt] 26.01.2024 20:35:34 [] (unknown:0) - Additional module paths ..: C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module\My_extension\ImageThreshold, slicer.org/Extensions-32438/DebuggingTools/lib/Slicer-5.6/qt-scripted-modules, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Print_hello_world, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Guided_examples, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Segmentation_k_mean, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\My_function
[DEBUG][Python] 26.01.2024 20:35:48 [Python] (D:\Program\Slicer 5.6.1\lib\Slicer-5.6\qt-scripted-modules\SubjectHierarchyPlugins\AbstractScriptedSubjectHierarchyPlugin.py:39) - Scripted subject hierarchy plugin registered: SegmentEditor
[DEBUG][Python] 26.01.2024 20:35:48 [Python] (D:\Program\Slicer 5.6.1\lib\Slicer-5.6\qt-scripted-modules\SubjectHierarchyPlugins\AbstractScriptedSubjectHierarchyPlugin.py:39) - Scripted subject hierarchy plugin registered: SegmentStatistics
[DEBUG][Qt] 26.01.2024 20:35:49 [] (unknown:0) - Switch to module:  "Welcome"
[DEBUG][Qt] 26.01.2024 20:36:00 [] (unknown:0) - Python console user input: slicer.util.loadScene("C:\\Users\\DANG THE HUNG\\OneDrive - King's College London\\Msc study\\7MRI0070 - Navigation in Robotic\\Working\\Week_2_4_test_2024-01-23.mrb")
[DEBUG][Qt] 26.01.2024 20:36:00 [] (unknown:0) - "MRB Slicer Data Bundle" Reader has successfully read the file "C:\\Users\\DANG THE HUNG\\OneDrive - King's College London\\Msc study\\7MRI0070 - Navigation in Robotic\\Working\\Week_2_4_test_2024-01-23.mrb" "[0.25s]"
[DEBUG][Qt] 26.01.2024 20:36:03 [] (unknown:0) - Switch to module:  "Markups"
[DEBUG][Qt] 26.01.2024 20:37:16 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 26.01.2024 20:37:44 [] (unknown:0) - Python console user input: model = getNode("Model_r_cortexTest")
[DEBUG][Qt] 26.01.2024 20:38:04 [] (unknown:0) - Python console user input: Model_formula = vtk.vtkImplicitPolyDataDistance()
[DEBUG][Qt] 26.01.2024 20:38:09 [] (unknown:0) - Python console user input: Model_formula.SetInput(model.GetPolyData())
[DEBUG][Qt] 26.01.2024 20:38:15 [] (unknown:0) - Python console user input: a = Model_formula.FunctionValue(start_point)
[DEBUG][Qt] 26.01.2024 20:38:21 [] (unknown:0) - Python console user input: b = Model_formula.FunctionValue(end_point)
[DEBUG][Qt] 26.01.2024 20:38:24 [] (unknown:0) - Python console user input: a
[INFO][Stream] 26.01.2024 20:38:24 [] (unknown:0) - -17.243445887955872
[DEBUG][Qt] 26.01.2024 20:38:25 [] (unknown:0) - Python console user input: b
[INFO][Stream] 26.01.2024 20:38:25 [] (unknown:0) - 18.056996966342393
[DEBUG][Qt] 26.01.2024 20:38:41 [] (unknown:0) - Python console user input: abs(a)
[INFO][Stream] 26.01.2024 20:38:41 [] (unknown:0) - 17.243445887955872
[DEBUG][Qt] 26.01.2024 20:39:52 [] (unknown:0) - Switch to module:  "My_function"
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:40:00 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 20:40:46 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 20:41:08 [] (unknown:0) - Python console user input: t.find_Intersection_Line_and_Model(x,y,model)
[CRITICAL][Stream] 26.01.2024 20:41:08 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:41:08 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:41:08 [] (unknown:0) - NameError: name 'x' is not defined
[DEBUG][Qt] 26.01.2024 20:41:23 [] (unknown:0) - Python console user input: t.find_Intersection_Line_and_Model(start_point,end_point,model)
[INFO][Stream] 26.01.2024 20:41:23 [] (unknown:0) - array([185.61888672,  47.11273438, 130.68199219])
[DEBUG][Qt] 26.01.2024 20:41:25 [] (unknown:0) - Python console user input: t.find_Intersection_Line_and_Model(start_point,end_point,model)
[INFO][Stream] 26.01.2024 20:41:25 [] (unknown:0) - array([185.61888672,  47.11273438, 130.68199219])
[DEBUG][Qt] 26.01.2024 20:41:25 [] (unknown:0) - Python console user input: t.find_Intersection_Line_and_Model(start_point,end_point,model)
[INFO][Stream] 26.01.2024 20:41:25 [] (unknown:0) - array([185.61888672,  47.11273438, 130.68199219])
[DEBUG][Qt] 26.01.2024 20:41:26 [] (unknown:0) - Python console user input: t.find_Intersection_Line_and_Model(start_point,end_point,model)
[INFO][Stream] 26.01.2024 20:41:26 [] (unknown:0) - array([185.61888672,  47.11273438, 130.68199219])
[DEBUG][Qt] 26.01.2024 20:42:28 [] (unknown:0) - Python console user input: k = t.find_Intersection_Line_and_Model(start_point,end_point,model)
[DEBUG][Qt] 26.01.2024 20:42:32 [] (unknown:0) - Switch to module:  "Markups"
[DEBUG][Qt] 26.01.2024 20:43:37 [] (unknown:0) - Python console user input: f = getNode("F")
[DEBUG][Qt] 26.01.2024 20:43:53 [] (unknown:0) - Python console user input: f.AddControlPoint(k)
[INFO][Stream] 26.01.2024 20:43:53 [] (unknown:0) - 0
[DEBUG][Qt] 26.01.2024 20:46:11 [] (unknown:0) - Python console user input: model.GetPolyData().GetCell(0)
[INFO][Stream] 26.01.2024 20:46:11 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkTriangle(0x0000017FE7C65800) at 0x0000017FD3C03760>
[DEBUG][Qt] 26.01.2024 20:46:18 [] (unknown:0) - Python console user input: x = model.GetPolyData().GetCell(0)
[DEBUG][Qt] 26.01.2024 20:46:27 [] (unknown:0) - Python console user input: x.GetFace()
[CRITICAL][Stream] 26.01.2024 20:46:27 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:46:27 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:46:27 [] (unknown:0) - TypeError: GetFace() takes exactly 1 argument (0 given)
[DEBUG][Qt] 26.01.2024 20:46:31 [] (unknown:0) - Python console user input: x.GetFace()0)
[CRITICAL][Stream] 26.01.2024 20:46:31 [] (unknown:0) -   File "<console>", line 1
[CRITICAL][Stream] 26.01.2024 20:46:31 [] (unknown:0) -     x.GetFace()0)
[CRITICAL][Stream] 26.01.2024 20:46:31 [] (unknown:0) -                ^
[CRITICAL][Stream] 26.01.2024 20:46:31 [] (unknown:0) - SyntaxError: invalid syntax
[DEBUG][Qt] 26.01.2024 20:46:34 [] (unknown:0) - Python console user input: x.GetFace(0)
[DEBUG][Qt] 26.01.2024 20:46:40 [] (unknown:0) - Python console user input: x
[INFO][Stream] 26.01.2024 20:46:40 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkTriangle(0x0000017FE7C65800) at 0x0000017FD3C03760>
[DEBUG][Qt] 26.01.2024 20:47:16 [] (unknown:0) - Python console user input: x.ComputeNormal()
[CRITICAL][Stream] 26.01.2024 20:47:16 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:47:16 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:47:16 [] (unknown:0) - TypeError: no overloads of ComputeNormal() take 0 arguments
[DEBUG][Qt] 26.01.2024 20:47:20 [] (unknown:0) - Python console user input: x.ComputeNormal(x)
[CRITICAL][Stream] 26.01.2024 20:47:20 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:47:20 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:47:20 [] (unknown:0) - TypeError: no overloads of ComputeNormal() take 1 argument
[DEBUG][Qt] 26.01.2024 20:49:22 [] (unknown:0) - Python console user input: k = vtk.vtkTriangle().ComputeNormal()
[CRITICAL][Stream] 26.01.2024 20:49:22 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:49:22 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:49:22 [] (unknown:0) - TypeError: no overloads of ComputeNormal() take 0 arguments
[DEBUG][Qt] 26.01.2024 20:49:40 [] (unknown:0) - Python console user input: vtk.vtkTriangle().ComputeNormal()
[CRITICAL][Stream] 26.01.2024 20:49:40 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 20:49:40 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 20:49:40 [] (unknown:0) - TypeError: no overloads of ComputeNormal() take 0 arguments
[DEBUG][Qt] 26.01.2024 20:57:24 [] (unknown:0) - Python console user input: help(x.ComputeNormal)
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) - Help on built-in function ComputeNormal:
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) - ComputeNormal(...) method of vtkmodules.vtkCommonDataModel.vtkTriangle instance
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     ComputeNormal(p:vtkPoints, numPts:int, pts:(int, ...), n:[float,
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -         float, float]) -> None
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     C++: static void ComputeNormal(vtkPoints *p, int numPts,
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -         const vtkIdType *pts, double n[3])
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     ComputeNormal(v1:(float, float, float), v2:(float, float, float),
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -         v3:(float, float, float), n:[float, float, float]) -> None
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     C++: static void ComputeNormal(const double v1[3],
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -         const double v2[3], const double v3[3], double n[3])
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     Compute the triangle normal from a points list, and a list of
[INFO][Stream] 26.01.2024 20:57:24 [] (unknown:0) -     point ids that index into the points list.
[INFO][Stream] 26.01.2024 20:57:25 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:00:03 [] (unknown:0) - Python console user input: x.ComputeNormal(3,11,[1,1,1])
[CRITICAL][Stream] 26.01.2024 21:00:03 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:00:03 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:00:03 [] (unknown:0) - TypeError: no overloads of ComputeNormal() take 3 arguments
[DEBUG][Qt] 26.01.2024 21:00:10 [] (unknown:0) - Python console user input: x.ComputeNormal(x,3,11,[1,1,1])
[CRITICAL][Stream] 26.01.2024 21:00:10 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:00:10 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:00:10 [] (unknown:0) - TypeError: arguments do not match any overloaded methods
[DEBUG][Qt] 26.01.2024 21:00:33 [] (unknown:0) - Python console user input: x.ComputeNormal(x,3,11,[1.0,1.0,1.0])
[CRITICAL][Stream] 26.01.2024 21:00:33 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:00:33 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:00:33 [] (unknown:0) - TypeError: arguments do not match any overloaded methods
[DEBUG][Qt] 26.01.2024 21:00:45 [] (unknown:0) - Python console user input: x
[INFO][Stream] 26.01.2024 21:00:45 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkTriangle(0x0000017FE7C65800) at 0x0000017FD3C03760>
[DEBUG][Qt] 26.01.2024 21:01:06 [] (unknown:0) - Python console user input: x.GetPointIds()
[INFO][Stream] 26.01.2024 21:01:06 [] (unknown:0) - <vtkmodules.vtkCommonCore.vtkIdList(0x0000017FE6980830) at 0x0000017FD4EDC940>
[DEBUG][Qt] 26.01.2024 21:01:12 [] (unknown:0) - Python console user input: x.GetPointId(0)
[INFO][Stream] 26.01.2024 21:01:12 [] (unknown:0) - 0
[DEBUG][Qt] 26.01.2024 21:01:15 [] (unknown:0) - Python console user input: x.GetPointId(1)
[INFO][Stream] 26.01.2024 21:01:15 [] (unknown:0) - 30
[DEBUG][Qt] 26.01.2024 21:01:18 [] (unknown:0) - Python console user input: x.GetPointId(2)
[INFO][Stream] 26.01.2024 21:01:18 [] (unknown:0) - 35
[DEBUG][Qt] 26.01.2024 21:03:43 [] (unknown:0) - Python console user input: x.GetPointId(2)
[INFO][Stream] 26.01.2024 21:03:43 [] (unknown:0) - 35
[DEBUG][Qt] 26.01.2024 21:03:58 [] (unknown:0) - Python console user input: y = model.GetPolyData()
[DEBUG][Qt] 26.01.2024 21:04:11 [] (unknown:0) - Python console user input: y.GetPointData(0)
[CRITICAL][Stream] 26.01.2024 21:04:11 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:04:11 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:04:11 [] (unknown:0) - TypeError: GetPointData() takes exactly 0 arguments (1 given)
[DEBUG][Qt] 26.01.2024 21:04:18 [] (unknown:0) - Python console user input: y.GetPoint(0)
[INFO][Stream] 26.01.2024 21:04:18 [] (unknown:0) - (124.90646362304688, 15.796351432800293, 110.19625091552734)
[DEBUG][Qt] 26.01.2024 21:04:31 [] (unknown:0) - Python console user input: y.GetPoint(x.GetPointId(0))
[INFO][Stream] 26.01.2024 21:04:31 [] (unknown:0) - (124.90646362304688, 15.796351432800293, 110.19625091552734)
[DEBUG][Qt] 26.01.2024 21:04:34 [] (unknown:0) - Python console user input: y.GetPoint(x.GetPointId(1))
[INFO][Stream] 26.01.2024 21:04:34 [] (unknown:0) - (124.06563568115234, 17.133888244628906, 106.82608795166016)
[DEBUG][Qt] 26.01.2024 21:04:39 [] (unknown:0) - Python console user input: y.GetPoint(x.GetPointId(2))
[INFO][Stream] 26.01.2024 21:04:39 [] (unknown:0) - (122.12024688720703, 15.79198169708252, 108.9852523803711)
[CRITICAL][Stream] 26.01.2024 21:07:16 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:07:16 [] (unknown:0) -   File "<string>", line 3, in <module>
[CRITICAL][Stream] 26.01.2024 21:07:16 [] (unknown:0) - NameError: name 'modelNode' is not defined
[CRITICAL][Stream] 26.01.2024 21:07:17 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:07:17 [] (unknown:0) -   File "<string>", line 3, in <module>
[CRITICAL][Stream] 26.01.2024 21:07:17 [] (unknown:0) - NameError: name 'modelNode' is not defined
[DEBUG][Qt] 26.01.2024 21:07:28 [] (unknown:0) - Python console user input: modelNode = model
[DEBUG][Qt] 26.01.2024 21:07:32 [] (unknown:0) - Python console user input: cell
[INFO][Stream] 26.01.2024 21:07:32 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkCellLocator(0x0000017FE75F1B20) at 0x0000017FCD6C9940>
[CRITICAL][Stream] 26.01.2024 21:11:27 [] (unknown:0) -   File "<string>", line 2
[CRITICAL][Stream] 26.01.2024 21:11:27 [] (unknown:0) -     cellObj = vtk.vtkGenericCell()
[CRITICAL][Stream] 26.01.2024 21:11:27 [] (unknown:0) - IndentationError: unexpected indent
[DEBUG][Qt] 26.01.2024 21:11:51 [] (unknown:0) - Python console user input: cellId
[INFO][Stream] 26.01.2024 21:11:51 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(0)
[DEBUG][Qt] 26.01.2024 21:12:03 [] (unknown:0) - Python console user input: help(cellId)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) - Help on number_reference object:
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) - class number_reference(reference)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  reference(value:int) -> reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  reference(value:float) -> reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  reference(value:str) -> reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  reference(value:(int, ...)) -> reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  A simple container that acts as a reference to its contents.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  This wrapper class is needed when a VTK method returns a value
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  in an argument that has been passed by reference.  By calling
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  "m = vtk.reference(a)" on a value, you can create a proxy to
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  that value.  The value can be changed by calling "m.set(b)".
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  Method resolution order:
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      number_reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      reference
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      builtins.object
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  Methods defined here:
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __abs__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      abs(self)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __add__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self+value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __and__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self&value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __bool__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      self != 0
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __divmod__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return divmod(self, value).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __eq__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self==value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __float__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      float(self)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __floordiv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self//value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ge__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self>=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __getattribute__(self, name, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return getattr(self, name).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __gt__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self>value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __iadd__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self+=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __iand__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self&=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ifloordiv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self//=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ilshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self<<=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __imod__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self%=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __imul__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self*=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __index__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self converted to an integer, if self is suitable for use as an index into a list.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __int__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      int(self)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __invert__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      ~self
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ior__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self|=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ipow__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self**=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __irshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self>>=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __isub__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self-=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __itruediv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self/=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ixor__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self^=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __le__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self<=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __lshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self<<value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __lt__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self<value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __mod__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self%value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __mul__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self*value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ne__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self!=value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __neg__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      -self
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __or__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self|value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __pos__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      +self
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __pow__(self, value, mod=None, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return pow(self, value, mod).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __radd__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value+self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rand__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value&self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rdivmod__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return divmod(value, self).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __repr__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return repr(self).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rfloordiv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value//self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rlshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value<<self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rmod__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value%self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rmul__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value*self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __ror__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value|self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __round__(...)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      __round__() -> int
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Returns the Integral closest to x, rounding half toward even.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rpow__(self, value, mod=None, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return pow(value, self, mod).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rrshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value>>self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rshift__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self>>value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rsub__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value-self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rtruediv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value/self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __rxor__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return value^self.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __str__(self, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return str(self).
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __sub__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self-value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __truediv__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self/value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __trunc__(...)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      __trunc__() -> int
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Returns the Integral closest to x between 0 and x.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __xor__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Return self^value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  get(...)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      get() -> object
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Get the stored value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  set(...)
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      set(value:object) -> None
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Set the stored value.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  Static methods defined here:
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __new__(*args, **kwargs) from builtins.type
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |      Create and return a new object.  See help(type) for accurate signature.
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  Data and other attributes defined here:
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -  |  __hash__ = None
[INFO][Stream] 26.01.2024 21:12:03 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:12:14 [] (unknown:0) - Python console user input: help(vtk.mutable)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) - Help on class reference in module vtkmodules.vtkCommonCore:
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) - class reference(builtins.object)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  reference(value:int) -> reference
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  reference(value:float) -> reference
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  reference(value:str) -> reference
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  reference(value:(int, ...)) -> reference
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  A simple container that acts as a reference to its contents.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  This wrapper class is needed when a VTK method returns a value
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  in an argument that has been passed by reference.  By calling
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  "m = vtk.reference(a)" on a value, you can create a proxy to
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  that value.  The value can be changed by calling "m.set(b)".
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  Methods defined here:
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __eq__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self==value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __ge__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self>=value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __getattribute__(self, name, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return getattr(self, name).
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __gt__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self>value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __le__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self<=value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __lt__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self<value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __ne__(self, value, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return self!=value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __repr__(self, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return repr(self).
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __round__(...)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      __round__() -> int
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Returns the Integral closest to x, rounding half toward even.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __str__(self, /)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Return str(self).
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __trunc__(...)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      __trunc__() -> int
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Returns the Integral closest to x between 0 and x.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  get(...)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      get() -> object
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Get the stored value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  set(...)
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      set(value:object) -> None
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Set the stored value.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  Static methods defined here:
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __new__(*args, **kwargs) from builtins.type
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |      Create and return a new object.  See help(type) for accurate signature.
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  Data and other attributes defined here:
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -  |  __hash__ = None
[INFO][Stream] 26.01.2024 21:12:14 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:12:42 [] (unknown:0) - Python console user input: cell.FindClosestPoint(k, closestPoint, cellObj, cellId, subId, dist2)
[DEBUG][Qt] 26.01.2024 21:12:48 [] (unknown:0) - Python console user input: k
[INFO][Stream] 26.01.2024 21:12:48 [] (unknown:0) - array([185.61888672,  47.11273438, 130.68199219])
[DEBUG][Qt] 26.01.2024 21:12:53 [] (unknown:0) - Python console user input: closestPoint
[INFO][Stream] 26.01.2024 21:12:53 [] (unknown:0) - [185.55343174293384, 47.1469019023754, 130.69344322636405]
[DEBUG][Qt] 26.01.2024 21:12:56 [] (unknown:0) - Python console user input: cellObj
[INFO][Stream] 26.01.2024 21:12:56 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkGenericCell(0x0000017FE8314B90) at 0x0000017FCD6B9E80>
[DEBUG][Qt] 26.01.2024 21:13:01 [] (unknown:0) - Python console user input: cellId
[INFO][Stream] 26.01.2024 21:13:01 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(3446)
[DEBUG][Qt] 26.01.2024 21:13:10 [] (unknown:0) - Python console user input: subId
[INFO][Stream] 26.01.2024 21:13:10 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(0)
[DEBUG][Qt] 26.01.2024 21:13:15 [] (unknown:0) - Python console user input: dist2
[INFO][Stream] 26.01.2024 21:13:15 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(0.005582900077107153)
[DEBUG][Qt] 26.01.2024 21:24:50 [] (unknown:0) - Python console user input: cellObj
[INFO][Stream] 26.01.2024 21:24:50 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkGenericCell(0x0000017FE8314B90) at 0x0000017FCD6B9E80>
[DEBUG][Qt] 26.01.2024 21:25:02 [] (unknown:0) - Python console user input: cellObj.GetNumberOfEdges()
[INFO][Stream] 26.01.2024 21:25:02 [] (unknown:0) - 3
[DEBUG][Qt] 26.01.2024 21:25:10 [] (unknown:0) - Python console user input: cellObj.GetPoints()
[INFO][Stream] 26.01.2024 21:25:10 [] (unknown:0) - <vtkmodules.vtkCommonCore.vtkPoints(0x0000017FE7E76B50) at 0x0000017FCD659B20>
[DEBUG][Qt] 26.01.2024 21:25:16 [] (unknown:0) - Python console user input: cellObj.GetPointId(0)
[INFO][Stream] 26.01.2024 21:25:16 [] (unknown:0) - 1908
[DEBUG][Qt] 26.01.2024 21:25:19 [] (unknown:0) - Python console user input: cellObj.GetPointId(1)
[INFO][Stream] 26.01.2024 21:25:19 [] (unknown:0) - 1904
[DEBUG][Qt] 26.01.2024 21:25:21 [] (unknown:0) - Python console user input: cellObj.GetPointId(2)
[INFO][Stream] 26.01.2024 21:25:21 [] (unknown:0) - 1615
[DEBUG][Qt] 26.01.2024 21:27:43 [] (unknown:0) - Python console user input: cellObj
[INFO][Stream] 26.01.2024 21:27:43 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkGenericCell(0x0000017FE8314B90) at 0x0000017FCD6B9E80>
[DEBUG][Qt] 26.01.2024 21:31:08 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 26.01.2024 21:31:08 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 26.01.2024 21:31:08 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:09 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:31:16 [] (unknown:0) - Python console user input: cell.FindClosestPoint(k, closestPoint, cellObj, cellId, subId, dist2)import My_function
[CRITICAL][Stream] 26.01.2024 21:31:16 [] (unknown:0) -   File "<console>", line 1
[CRITICAL][Stream] 26.01.2024 21:31:16 [] (unknown:0) -     cell.FindClosestPoint(k, closestPoint, cellObj, cellId, subId, dist2)import My_function
[CRITICAL][Stream] 26.01.2024 21:31:16 [] (unknown:0) -                                                                          ^
[CRITICAL][Stream] 26.01.2024 21:31:16 [] (unknown:0) - SyntaxError: invalid syntax
[DEBUG][Qt] 26.01.2024 21:31:21 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 21:31:38 [] (unknown:0) - Python console user input: t.find_nearest_Cell(k, model)
[CRITICAL][Stream] 26.01.2024 21:31:38 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:31:38 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:31:38 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 261, in find_nearest_Cell
[CRITICAL][Stream] 26.01.2024 21:31:38 [] (unknown:0) -     cell.FindClosestPoint(point, closestPoint, cellObj, cellId, subId, dist)
[CRITICAL][Stream] 26.01.2024 21:31:38 [] (unknown:0) - NameError: name 'cell' is not defined
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:31:53 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:32:09 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 21:32:11 [] (unknown:0) - Python console user input: t.find_nearest_Cell(k, model)
[INFO][Stream] 26.01.2024 21:32:11 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkGenericCell(0x0000017FE8314ED0) at 0x0000017FDC02E1C0>
[DEBUG][Qt] 26.01.2024 21:32:16 [] (unknown:0) - Python console user input: t.find_nearest_Cell(k, model)
[INFO][Stream] 26.01.2024 21:32:16 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkGenericCell(0x0000017FE831A690) at 0x0000017FDC02E220>
[DEBUG][Qt] 26.01.2024 21:33:57 [] (unknown:0) - Python console user input: cellId
[INFO][Stream] 26.01.2024 21:33:57 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(3446)
[DEBUG][Qt] 26.01.2024 21:34:21 [] (unknown:0) - Python console user input: model.GetMesh().GetNumberOfCells()
[INFO][Stream] 26.01.2024 21:34:21 [] (unknown:0) - 19400
[DEBUG][Qt] 26.01.2024 21:34:41 [] (unknown:0) - Python console user input: model.GetMesh().GetCell(3446)
[INFO][Stream] 26.01.2024 21:34:41 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkTriangle(0x0000017FE7C65800) at 0x0000017FD3C03760>
[DEBUG][Qt] 26.01.2024 21:34:48 [] (unknown:0) - Python console user input: t = model.GetMesh().GetCell(3446)
[DEBUG][Qt] 26.01.2024 21:34:58 [] (unknown:0) - Python console user input: t.GetPointId(0)
[INFO][Stream] 26.01.2024 21:34:58 [] (unknown:0) - 1908
[DEBUG][Qt] 26.01.2024 21:35:07 [] (unknown:0) - Python console user input: cellObjt.GetPointId(0)
[CRITICAL][Stream] 26.01.2024 21:35:07 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:35:07 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:35:07 [] (unknown:0) - NameError: name 'cellObjt' is not defined
[DEBUG][Qt] 26.01.2024 21:35:16 [] (unknown:0) - Python console user input: cellObj.GetPointId(0)
[INFO][Stream] 26.01.2024 21:35:16 [] (unknown:0) - 1908
[DEBUG][Qt] 26.01.2024 21:35:22 [] (unknown:0) - Python console user input: t.GetPointId(1)
[INFO][Stream] 26.01.2024 21:35:22 [] (unknown:0) - 1904
[DEBUG][Qt] 26.01.2024 21:35:26 [] (unknown:0) - Python console user input: cellObj.GetPointId(1)
[INFO][Stream] 26.01.2024 21:35:26 [] (unknown:0) - 1904
[DEBUG][Qt] 26.01.2024 21:35:31 [] (unknown:0) - Python console user input: t.GetPointId(2)
[INFO][Stream] 26.01.2024 21:35:31 [] (unknown:0) - 1615
[DEBUG][Qt] 26.01.2024 21:35:33 [] (unknown:0) - Python console user input: cellObj.GetPointId(2)
[INFO][Stream] 26.01.2024 21:35:33 [] (unknown:0) - 1615
[DEBUG][Qt] 26.01.2024 21:39:37 [] (unknown:0) - Python console user input: cell = model.GetMesh().GetCell(0)
[DEBUG][Qt] 26.01.2024 21:40:04 [] (unknown:0) - Python console user input: cell.GetPointId(0)
[INFO][Stream] 26.01.2024 21:40:04 [] (unknown:0) - 0
[DEBUG][Qt] 26.01.2024 21:41:04 [] (unknown:0) - Python console user input: mesh_model = model.GetMesh()
[DEBUG][Qt] 26.01.2024 21:41:08 [] (unknown:0) - Python console user input: cell = mesh_model.GetCell(cell_ID)
[CRITICAL][Stream] 26.01.2024 21:41:08 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:41:08 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:41:08 [] (unknown:0) - NameError: name 'cell_ID' is not defined
[DEBUG][Qt] 26.01.2024 21:41:11 [] (unknown:0) - Python console user input: cell = mesh_model.GetCell(0)
[DEBUG][Qt] 26.01.2024 21:41:26 [] (unknown:0) - Python console user input: mesh_model.GetPoint(0)
[INFO][Stream] 26.01.2024 21:41:26 [] (unknown:0) - (124.90646362304688, 15.796351432800293, 110.19625091552734)
[DEBUG][Qt] 26.01.2024 21:41:39 [] (unknown:0) - Python console user input: mesh_model.GetPoint(cell.GetPointId(0))
[INFO][Stream] 26.01.2024 21:41:39 [] (unknown:0) - (124.90646362304688, 15.796351432800293, 110.19625091552734)
[CRITICAL][Stream] 26.01.2024 21:41:57 [] (unknown:0) -   File "<string>", line 1
[CRITICAL][Stream] 26.01.2024 21:41:57 [] (unknown:0) -     vertex_1 = mesh_model.GetPoint(cell.GetPointId(0))
[CRITICAL][Stream] 26.01.2024 21:41:57 [] (unknown:0) - IndentationError: unexpected indent
[DEBUG][Qt] 26.01.2024 21:44:19 [] (unknown:0) - Python console user input: cross = np.cross(vertex_1-vertex_2, vertex_1-vertex_3)
[CRITICAL][Stream] 26.01.2024 21:44:19 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:44:19 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:44:19 [] (unknown:0) - NameError: name 'np' is not defined
[DEBUG][Qt] 26.01.2024 21:44:24 [] (unknown:0) - Python console user input: import numpy as np
[DEBUG][Qt] 26.01.2024 21:44:26 [] (unknown:0) - Python console user input: cross = np.cross(vertex_1-vertex_2, vertex_1-vertex_3)
[CRITICAL][Stream] 26.01.2024 21:44:26 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 21:44:26 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 21:44:26 [] (unknown:0) - TypeError: unsupported operand type(s) for -: 'tuple' and 'tuple'
[DEBUG][Qt] 26.01.2024 21:45:12 [] (unknown:0) - Python console user input: cross = np.cross(vertex_1-vertex_2, vertex_1-vertex_3)
[DEBUG][Qt] 26.01.2024 21:45:16 [] (unknown:0) - Python console user input: cross/np.linalg.norm(cross)
[INFO][Stream] 26.01.2024 21:45:16 [] (unknown:0) - array([-0.1755647 ,  0.89923669,  0.40068741])
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 21:45:25 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 21:45:34 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 21:45:54 [] (unknown:0) - Python console user input: t.find_nearest_Cell(k, model)
[INFO][Stream] 26.01.2024 21:45:54 [] (unknown:0) - vtkmodules.vtkCommonCore.number_reference(3446)
[DEBUG][Qt] 26.01.2024 21:46:04 [] (unknown:0) - Python console user input: int(t.find_nearest_Cell(k, model))
[INFO][Stream] 26.01.2024 21:46:04 [] (unknown:0) - 3446
[DEBUG][Qt] 26.01.2024 21:46:51 [] (unknown:0) - Python console user input: t.find_Unit_Normal_Vector_of_Cell_from_model(3446,model)
[INFO][Stream] 26.01.2024 21:46:51 [] (unknown:0) - array([-0.87601741,  0.45728149,  0.15325511])
[DEBUG][Qt] 26.01.2024 22:12:19 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 26.01.2024 22:14:46 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 26.01.2024 22:14:46 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 26.01.2024 22:14:46 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:14:47 [] (unknown:0) -
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\bin\Python\slicer\ScriptedLoadableModule.py", line 246, in onReload
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -     slicer.util.reloadScriptedModule(self.moduleName)
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py", line 1389, in reloadScriptedModule
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -     reloaded_module = imp.load_module(
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\imp.py", line 234, in load_module
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -     return load_source(name, filename, file)
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\imp.py", line 169, in load_source
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -     module = _exec(spec, sys.modules[name])
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "<frozen importlib._bootstrap>", line 613, in _exec
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "<frozen importlib._bootstrap_external>", line 846, in exec_module
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "<frozen importlib._bootstrap_external>", line 983, in get_code
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "<frozen importlib._bootstrap_external>", line 913, in source_to_code
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "<frozen importlib._bootstrap>", line 228, in _call_with_frames_removed
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 383
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -     if np.arccos(abs(cos_value)) > angle_versus_normal_vector
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) -                                                              ^
[CRITICAL][Stream] 26.01.2024 22:14:47 [] (unknown:0) - SyntaxError: invalid syntax
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:15:30 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 22:15:42 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 22:15:47 [] (unknown:0) - Python console user input: start_point
[INFO][Stream] 26.01.2024 22:15:47 [] (unknown:0) - array([196.439,  32.284, 126.646])
[DEBUG][Qt] 26.01.2024 22:15:53 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 26.01.2024 22:16:04 [] (unknown:0) - Python console user input: start_point = array("F")[0]
[DEBUG][Qt] 26.01.2024 22:16:10 [] (unknown:0) - Python console user input: end_point = array("F")[1]
[DEBUG][Qt] 26.01.2024 22:16:41 [] (unknown:0) - Python console user input: t = My_function.My_function_for_Projects()
[DEBUG][Qt] 26.01.2024 22:17:00 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require()
[DEBUG][Qt] 26.01.2024 22:17:24 [] (unknown:0) - Python console user input: model = getNode("Model_r_cortexTest")
[DEBUG][Qt] 26.01.2024 22:17:31 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model)
[DEBUG][Qt] 26.01.2024 22:17:49 [] (unknown:0) - Python console user input: t.find_Pathway_Model_for_Angle_Require
[INFO][Stream] 26.01.2024 22:17:49 [] (unknown:0) - [<MRMLCorePython.vtkMRMLModelNode(0x0000017FD3394080) at 0x0000017FD4EDC8E0>]
[DEBUG][Qt] 26.01.2024 22:18:22 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:18:22 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:18:33 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:18:33 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:18:42 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:18:42 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:18:43 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:18:43 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:18:48 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:18:48 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:19:04 [] (unknown:0) - Python console user input: start_point
[INFO][Stream] 26.01.2024 22:19:04 [] (unknown:0) - array([204.59695974,  64.501273  , 180.69793735])
[DEBUG][Qt] 26.01.2024 22:19:11 [] (unknown:0) - Python console user input: start_point
[INFO][Stream] 26.01.2024 22:19:11 [] (unknown:0) - array([204.59695974,  64.501273  , 180.69793735])
[DEBUG][Qt] 26.01.2024 22:19:48 [] (unknown:0) - Python console user input: start_point = array("F")[0]
[DEBUG][Qt] 26.01.2024 22:19:49 [] (unknown:0) - Python console user input: start_point
[INFO][Stream] 26.01.2024 22:19:49 [] (unknown:0) - array([171.36795662, 106.86196159, 205.54282798])
[DEBUG][Qt] 26.01.2024 22:19:53 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:19:53 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:20:36 [] (unknown:0) - Python console user input: start_point = array("F")[0]
[DEBUG][Qt] 26.01.2024 22:20:41 [] (unknown:0) - Python console user input: end_point = array("F")[1]
[DEBUG][Qt] 26.01.2024 22:20:43 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:20:43 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:21:23 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 26.01.2024 22:21:23 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 26.01.2024 22:21:23 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:21:25 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 22:21:27 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 26.01.2024 22:21:53 [] (unknown:0) - Python console user input: t = My_function.My_functionLogic()
[DEBUG][Qt] 26.01.2024 22:21:56 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[CRITICAL][Stream] 26.01.2024 22:21:56 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 22:21:56 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 22:21:56 [] (unknown:0) - AttributeError: 'My_functionLogic' object has no attribute 'find_Pathway_Check_Angle_Require'
[DEBUG][Qt] 26.01.2024 22:22:07 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model)
[CRITICAL][Stream] 26.01.2024 22:22:07 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 22:22:07 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 26.01.2024 22:22:07 [] (unknown:0) - AttributeError: 'My_functionLogic' object has no attribute 'find_Pathway_set_Model_for_Angle_Require'
[DEBUG][Qt] 26.01.2024 22:22:19 [] (unknown:0) - Python console user input: t = My_function.My_function_for_Projects()
[DEBUG][Qt] 26.01.2024 22:22:21 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model)
[DEBUG][Qt] 26.01.2024 22:22:24 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:22:24 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:22:45 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 26.01.2024 22:22:45 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 26.01.2024 22:22:45 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:22:46 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 22:22:50 [] (unknown:0) - Python console user input: t = My_function.My_function_for_Projects()
[DEBUG][Qt] 26.01.2024 22:22:52 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model)
[DEBUG][Qt] 26.01.2024 22:22:55 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:22:55 [] (unknown:0) - 0.3919181559680232
[INFO][Stream] 26.01.2024 22:22:55 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:23:33 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:23:33 [] (unknown:0) - 0.3919181559680232
[INFO][Stream] 26.01.2024 22:23:33 [] (unknown:0) - True
[INFO][Stream] 26.01.2024 22:24:06 [] (unknown:0) - 0.8602641786239884
[DEBUG][Qt] 26.01.2024 22:24:13 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:24:13 [] (unknown:0) - 0.8602641786239884
[INFO][Stream] 26.01.2024 22:24:13 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:24:25 [] (unknown:0) - Python console user input: np.pi*55/180
[INFO][Stream] 26.01.2024 22:24:25 [] (unknown:0) - 0.9599310885968813
[INFO][Stream] 26.01.2024 22:24:44 [] (unknown:0) - 0.7481772242901409
[DEBUG][Qt] 26.01.2024 22:24:51 [] (unknown:0) - Switch to module:  "Data"
[INFO][Stream] 26.01.2024 22:25:58 [] (unknown:0) - 1.1089071267042514
[DEBUG][Qt] 26.01.2024 22:26:02 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:26:02 [] (unknown:0) - 1.1089071267042514
[INFO][Stream] 26.01.2024 22:26:02 [] (unknown:0) - False
[INFO][Stream] 26.01.2024 22:27:09 [] (unknown:0) - 1.1664267859360176
[DEBUG][Qt] 26.01.2024 22:27:16 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:27:16 [] (unknown:0) - 1.1664267859360176
[INFO][Stream] 26.01.2024 22:27:16 [] (unknown:0) - False
[INFO][Stream] 26.01.2024 22:27:23 [] (unknown:0) - 0.8396681062869712
[DEBUG][Qt] 26.01.2024 22:27:24 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:27:24 [] (unknown:0) - 0.8396681062869712
[INFO][Stream] 26.01.2024 22:27:24 [] (unknown:0) - True
[INFO][Stream] 26.01.2024 22:27:33 [] (unknown:0) - 1.5243302310351516
[DEBUG][Qt] 26.01.2024 22:27:34 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:27:34 [] (unknown:0) - 1.5243302310351516
[INFO][Stream] 26.01.2024 22:27:34 [] (unknown:0) - False
[INFO][Stream] 26.01.2024 22:27:43 [] (unknown:0) - 0.7593777130888292
[DEBUG][Qt] 26.01.2024 22:27:44 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:27:44 [] (unknown:0) - 0.7593777130888292
[INFO][Stream] 26.01.2024 22:27:44 [] (unknown:0) - True
[INFO][Stream] 26.01.2024 22:28:02 [] (unknown:0) - Please select 1 point inside and 1 point outside the model
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) -   File "<string>", line 3, in <module>
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 379, in find_Pathway_Check_Angle_Require
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) -     cell_ID = self.logic.find_nearest_Cell(contact_point, model)
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 261, in find_nearest_Cell
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) -     cell_locator.FindClosestPoint(point, closestPoint, cellObj, cellId, subId, dist)
[CRITICAL][Stream] 26.01.2024 22:28:02 [] (unknown:0) - TypeError: FindClosestPoint argument 1: expected a sequence of 3 values, got -1 values
[INFO][Stream] 26.01.2024 22:28:13 [] (unknown:0) - 0.9652245256569264
[DEBUG][Qt] 26.01.2024 22:28:23 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:28:23 [] (unknown:0) - 0.9652245256569264
[INFO][Stream] 26.01.2024 22:28:23 [] (unknown:0) - False
[INFO][Stream] 26.01.2024 22:28:41 [] (unknown:0) - 0.8789622434122665
[DEBUG][Qt] 26.01.2024 22:28:42 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:28:42 [] (unknown:0) - 0.8789622434122665
[INFO][Stream] 26.01.2024 22:28:42 [] (unknown:0) - True
[INFO][Stream] 26.01.2024 22:28:55 [] (unknown:0) - 0.16427322509046852
[DEBUG][Qt] 26.01.2024 22:28:57 [] (unknown:0) - Python console user input: t.find_Pathway_Check_Angle_Require(start_point, end_point)
[INFO][Stream] 26.01.2024 22:28:57 [] (unknown:0) - 0.16427322509046852
[INFO][Stream] 26.01.2024 22:28:57 [] (unknown:0) - True
[DEBUG][Qt] 26.01.2024 22:42:05 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 26.01.2024 22:42:05 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 26.01.2024 22:42:05 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) - ------------------------------
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[INFO][Stream] 26.01.2024 22:42:06 [] (unknown:0) -
[DEBUG][Qt] 26.01.2024 22:42:27 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 26.01.2024 22:42:45 [] (unknown:0) - Python console user input: model1=getNode("Model_r_cortexTest")
[DEBUG][Qt] 26.01.2024 22:43:38 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model1)
[DEBUG][Qt] 26.01.2024 22:43:45 [] (unknown:0) - Python console user input: t.find_Pathway_set_Model_for_Angle_Require(model1)
[DEBUG][Qt] 26.01.2024 22:43:51 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 26.01.2024 22:43:51 [] (unknown:0) - Good to go
[DEBUG][Qt] 26.01.2024 22:43:57 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 26.01.2024 22:43:58 [] (unknown:0) - Good to go
