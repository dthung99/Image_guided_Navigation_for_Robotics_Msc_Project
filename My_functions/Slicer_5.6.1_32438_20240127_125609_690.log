[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Session start time .......: 20240127_125609
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Slicer version ...........: 5.6.1 (revision 32438 / 117ce5f) win-amd64 - installed release
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Operating system .........: Windows /  Personal / (Build 22621, Code Page 65001) - 64-bit
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Memory ...................: 7834 MB physical, 12954 MB virtual
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - CPU ......................: GenuineIntel , 8 cores, 8 logical processors
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - VTK configuration ........: OpenGL2 rendering, TBB threading
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Qt configuration .........: version 5.15.2, with SSL, requested OpenGL 3.2 (compatibility profile)
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Internationalization .....: disabled, language=
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Developer mode ...........: enabled
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Application path .........: D:/Program/Slicer 5.6.1/bin
[DEBUG][Qt] 27.01.2024 12:56:09 [] (unknown:0) - Additional module paths ..: C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module\My_extension\ImageThreshold, slicer.org/Extensions-32438/DebuggingTools/lib/Slicer-5.6/qt-scripted-modules, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Print_hello_world, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Guided_examples, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\Segmentation_k_mean, C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension\My_function
[DEBUG][Python] 27.01.2024 12:56:26 [Python] (D:\Program\Slicer 5.6.1\lib\Slicer-5.6\qt-scripted-modules\SubjectHierarchyPlugins\AbstractScriptedSubjectHierarchyPlugin.py:39) - Scripted subject hierarchy plugin registered: SegmentEditor
[DEBUG][Python] 27.01.2024 12:56:26 [Python] (D:\Program\Slicer 5.6.1\lib\Slicer-5.6\qt-scripted-modules\SubjectHierarchyPlugins\AbstractScriptedSubjectHierarchyPlugin.py:39) - Scripted subject hierarchy plugin registered: SegmentStatistics
[DEBUG][Qt] 27.01.2024 12:56:26 [] (unknown:0) - Switch to module:  "Welcome"
[DEBUG][Qt] 27.01.2024 12:59:20 [] (unknown:0) - Python console user input: slicer.util.loadScene("C:\\Users\\DANG THE HUNG\\OneDrive - King's College London\\Msc study\\7MRI0070 - Navigation in Robotic\\Working\\Week_2_4_test_2024-01-23.mrb")
[DEBUG][Qt] 27.01.2024 12:59:21 [] (unknown:0) - "MRB Slicer Data Bundle" Reader has successfully read the file "C:\\Users\\DANG THE HUNG\\OneDrive - King's College London\\Msc study\\7MRI0070 - Navigation in Robotic\\Working\\Week_2_4_test_2024-01-23.mrb" "[1.07s]"
[DEBUG][Qt] 27.01.2024 12:59:34 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:00:02 [] (unknown:0) - Switch to module:  "Markups"
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_1.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_1.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_10.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_10.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_11.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_11.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_12.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_12.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_13.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_13.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_14.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_14.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_15.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_15.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_16.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_16.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_17.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_17.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_18.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_18.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_19.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_19.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_2.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_2.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_20.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_20.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_21.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_21.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_22.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_22.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_23.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_23.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_24.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_24.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_25.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_25.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_26.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_26.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_27.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_27.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_28.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_28.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_29.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_29.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_3.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_3.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_30.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_30.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_31.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_31.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_32.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_32.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_33.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_33.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_34.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_34.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_35.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_35.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_4.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_4.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_5.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_5.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_6.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_6.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_7.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_7.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_8.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_8.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/qualified_Line_9.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_9.mrk.json
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_130038_533/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[INFO][VTK] 27.01.2024 13:00:38 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[DEBUG][Qt] 27.01.2024 13:00:38 [] (unknown:0) - saved  "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Working/Week_2_4_test_2024-01-23.mrb"
[WARNING][Qt] 27.01.2024 13:00:38 [] (unknown:0) - void __cdecl qSlicerSaveDataDialogPrivate::updateStatusIconFromMessageCollection(int,class vtkMRMLMessageCollection *,bool) Data save warning: "- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode1): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode2): fcsv file format only stores control point coordinates and a limited set of display properties.\n"
[DEBUG][Qt] 27.01.2024 13:00:44 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:01:22 [] (unknown:0) - Python console user input: a= getNode("Model_ventriclesTest")
[DEBUG][Qt] 27.01.2024 13:01:39 [] (unknown:0) - Python console user input: b= getNode("Model_vesselsTestDilate1")
[DEBUG][Qt] 27.01.2024 13:02:23 [] (unknown:0) - Python console user input: x= vtk.vtkAppendPolyData()
[DEBUG][Qt] 27.01.2024 13:05:30 [] (unknown:0) - Python console user input: x.GetOutput()
[INFO][Stream] 27.01.2024 13:05:30 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkPolyData(0x00000264BF30B0B0) at 0x0000026493C9AF40>
[DEBUG][Qt] 27.01.2024 13:06:22 [] (unknown:0) - Python console user input: x.AddInputData(a.GetPolyData())
[DEBUG][Qt] 27.01.2024 13:06:26 [] (unknown:0) - Python console user input: x.AddInputData(b.GetPolyData())
[DEBUG][Qt] 27.01.2024 13:06:36 [] (unknown:0) - Python console user input: x.GetOutput()
[INFO][Stream] 27.01.2024 13:06:36 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkPolyData(0x00000264BF30B0B0) at 0x0000026493C9AF40>
[DEBUG][Qt] 27.01.2024 13:07:09 [] (unknown:0) - Python console user input: z = slicer.mrmlScene.AddNewNodeByClass()
[CRITICAL][Stream] 27.01.2024 13:07:09 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:07:09 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:07:09 [] (unknown:0) - TypeError: AddNewNodeByClass() takes at least 1 argument (0 given)
[DEBUG][Qt] 27.01.2024 13:07:10 [] (unknown:0) - Python console user input: a
[INFO][Stream] 27.01.2024 13:07:10 [] (unknown:0) - <MRMLCorePython.vtkMRMLModelNode(0x0000026499A86170) at 0x0000026494D2E6A0>
[DEBUG][Qt] 27.01.2024 13:07:17 [] (unknown:0) - Python console user input: z = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLModelNode")
[DEBUG][Qt] 27.01.2024 13:08:39 [] (unknown:0) - Python console user input: z.SetAndObserveMesh(x.Geto)
[CRITICAL][Stream] 27.01.2024 13:08:39 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:08:39 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:08:39 [] (unknown:0) - AttributeError: 'vtkmodules.vtkFiltersCore.vtkAppendPolyData' object has no attribute 'Geto'
[DEBUG][Qt] 27.01.2024 13:08:45 [] (unknown:0) - Python console user input: z.SetAndObserveMesh(x.GetOutput())
[DEBUG][Qt] 27.01.2024 13:09:51 [] (unknown:0) - Python console user input: z.CreateDefaultDisplayNodes()
[DEBUG][Qt] 27.01.2024 13:09:56 [] (unknown:0) - Python console user input: z.CreateDefaultStorageNode()
[INFO][Stream] 27.01.2024 13:09:56 [] (unknown:0) - <MRMLCorePython.vtkMRMLModelStorageNode(0x00000264A7A30400) at 0x0000026494C8C280>
[DEBUG][Qt] 27.01.2024 13:10:43 [] (unknown:0) - Python console user input: a.SetAndObserveMesh(x.GetOutput())
[DEBUG][Qt] 27.01.2024 13:13:19 [] (unknown:0) - Python console user input: x.Update()
[DEBUG][Qt] 27.01.2024 13:15:11 [] (unknown:0) - Python console user input: adding_tool = vtk.vtkAppendPolyData()
[DEBUG][Qt] 27.01.2024 13:17:36 [] (unknown:0) - Python console user input: help(slicer.mrmlScene.AddNewNodeByClass("vtkMRMLModelNode"))
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) - Help on vtkMRMLModelNode object:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) - class vtkMRMLModelNode(vtkMRMLDisplayableNode)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  vtkMRMLModelNode - MRML node to represent a 3D surface model.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Superclass: vtkMRMLDisplayableNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Model nodes describe polygonal data. When a model display node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  (vtkMRMLModelDisplayNode) is observed by the model, the output mesh
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  is automatically set to the input of the model display node: You
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  don't have to manually set the mesh yourself. Models are assumed to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  have been constructed with the orientation and voxel dimensions of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  the original segmented volume.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Method resolution order:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLModelNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLDisplayableNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLTransformableNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLStorableNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkmodules.vtkCommonCore.vtkObject
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkmodules.vtkCommonCore.vtkObjectBase
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      builtins.object
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods defined here:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddCellScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddCellScalars(self, array:vtkDataArray) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddCellScalars(vtkDataArray *array)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Add an array to the mesh's cell data.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa AddPointScalars, AddScalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddPointScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddPointScalars(self, array:vtkDataArray) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddPointScalars(vtkDataArray *array)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that adds an array to the mesh's point data.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa AddCellScalars, AddScalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddScalars(self, array:vtkDataArray, location:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddScalars(vtkDataArray *array, int location)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Add an array to the mesh's point or cell data location is either
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkAssignAttribute::POINT_DATA or vtkAssignAttribute::CELL_DATA
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ApplyTransform(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ApplyTransform(self, transform:vtkAbstractTransform) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void ApplyTransform(vtkAbstractTransform *transform)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Transforms the node with the provided non-linear transform.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserveTransformNodeID, ApplyTransformMatrix,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          CanApplyNonLinearTransforms
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CanApplyNonLinearTransforms(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CanApplyNonLinearTransforms(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool CanApplyNonLinearTransforms() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns true if the transformable node can apply non-linear
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      transforms. A transformable node is always expected to apply
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      linear transforms.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa ApplyTransformMatrix, ApplyTransform
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CompositeScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CompositeScalars(self, backgroundName:str, overlayName:str,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          overlayMin:float, overlayMax:float, showOverlayPositive:int,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          showOverlayNegative:int, reverseOverlay:int) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int CompositeScalars(const char *backgroundName,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *overlayName, float overlayMin, float overlayMax,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int showOverlayPositive, int showOverlayNegative,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int reverseOverlay)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Take scalar fields and composite them into a new one. New array
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      will have values from the background array where the overlay is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      +/- if showOverlayPositive/Negative are 0. overlayMin and Max are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      used to adjust the color transfer function points, both should be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      positive, as they are mirrored around 0. -Min to Min gives the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      gap where the curvature will show through. New array name is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      backgroundName+overlayName Returns 1 on success, 0 on failure.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Based on code from K. Teich, MGH Warning: Not demand driven
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      pipeline compliant
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CopyContent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CopyContent(self, node:vtkMRMLNode, deepCopy:bool=True) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void CopyContent(vtkMRMLNode *node, bool deepCopy=true)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Copy node content (excludes basic data, such as name and node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      references).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa vtkMRMLNode::CopyContent
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CreateDefaultDisplayNodes(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateDefaultDisplayNodes(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void CreateDefaultDisplayNodes() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Create and observe default display node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CreateDefaultStorageNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateDefaultStorageNode(self) -> vtkMRMLStorageNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLStorageNode *CreateDefaultStorageNode() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Create a storage node for this node type. If it returns nullptr
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      then it means the node can be stored in the scene (in XML),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      without using a storage node. Null by default. This must be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      overwritten by subclasses that use storage nodes.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CreateNodeInstance(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateNodeInstance(self) -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *CreateNodeInstance() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      MRMLNode methods
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetActiveCellScalarName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetActiveCellScalarName(self, type:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetActiveCellScalarName(int type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get the currently active Point/Cell array name, type =
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkDataSetAttributes::AttributeTypes for an active array. Returns
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      an empty string if it can't find one or if no input mesh is set.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetActivePointScalarName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetActivePointScalarName(self, type:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetActivePointScalarName(int type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get the currently active point array name, type =
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkDataSetAttributes::AttributeTypes for an active array. Returns
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      an empty string if it can't find one or if no input mesh is set.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetActiveCellScalarName
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetAttributeTypeFromString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAttributeTypeFromString(typeName:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static int GetAttributeTypeFromString(const char *typeName)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that returns the attribute type from its name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      It is the opposite of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkDataSetAttributes::GetAttributeTypeAsString(int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa vtkDataSetAttributes::GetAttributeTypeAsString()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetBounds(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetBounds(self, bounds:[float, float, float, float, float, float])
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void GetBounds(double bounds[6]) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get bounding box in global RAS form (xmin,xmax, ymin,ymax,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      zmin,zmax). This method always returns the bounds of the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      untransformed object.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetRASBounds()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDefaultStorageNodeClassName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDefaultStorageNodeClassName(self, filename:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: std::string GetDefaultStorageNodeClassName(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *filename) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Determines the most appropriate storage node class for the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      provided file name and node content. If the method is not
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      overwritten by subclass then it uses CreateDefaultStorageNode to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      determine storage node class name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetMesh(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetMesh(self) -> vtkPointSet
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkPointSet *GetMesh()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserveMesh(), GetPolyData(), GetUnstructuredGrid(),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          GetMeshConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetMeshConnection(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetMeshConnection(self) -> vtkAlgorithmOutput
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkAlgorithmOutput *GetMeshConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh pipeline.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetPolyDataConnection(), GetUnstructuredGridConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetMeshType(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetMeshType(self) -> MeshTypeHint
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual MeshTypeHint GetMeshType()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get the mesh type of that model. The safest way to know if the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      mesh is unstructuredGrid is to check if GetUnstructuredGrid() is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      not nullptr, but it requires to update the pipeline.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa MeshType, GetUnstructuredGrid()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetModelDisplayNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetModelDisplayNode(self) -> vtkMRMLModelDisplayNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLModelDisplayNode *GetModelDisplayNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get associated model display MRML node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetModifiedSinceRead(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetModifiedSinceRead(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool GetModifiedSinceRead() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Reimplemented to take into account the modified time of the mesh.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns true if the node (default behavior) or the mesh are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      modified since read/written. Note: The MTime of the mesh is used
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      to know if it has been modified. So if you invoke
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      MeshModifiedEvent without calling Modified() on the mesh,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetModifiedSinceRead() won't return true.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa vtkMRMLStorableNode::GetModifiedSinceRead()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNodeTagName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNodeTagName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNodeTagName() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get node XML tag name (like Volume, Model)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfGenerationsFromBase(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfGenerationsFromBase(self, type:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkIdType GetNumberOfGenerationsFromBase(const char *type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Given the name of a base class of this class type, return the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      distance of inheritance between this class type and the named
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class (how many generations of inheritance are there between this
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class and the named class). If the named class is not in this
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class's inheritance tree, return a negative value. Valid
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      responses will always be nonnegative. This method works in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      combination with vtkTypeMacro found in vtkSetGet.h.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfGenerationsFromBaseType(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfGenerationsFromBaseType(type:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static vtkIdType GetNumberOfGenerationsFromBaseType(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Given a the name of a base class of this class type, return the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      distance of inheritance between this class type and the named
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class (how many generations of inheritance are there between this
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class and the named class). If the named class is not in this
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class's inheritance tree, return a negative value. Valid
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      responses will always be nonnegative. This method works in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      combination with vtkTypeMacro found in vtkSetGet.h.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetPolyData(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetPolyData(self) -> vtkPolyData
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkPolyData *GetPolyData()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh if it is a polydata.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMesh(), SetAndObserveMesh()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetPolyDataConnection(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetPolyDataConnection(self) -> vtkAlgorithmOutput
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkAlgorithmOutput *GetPolyDataConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh pipeline if the mesh is a polydata.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMeshConnection(), SetPolyDataConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetRASBounds(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetRASBounds(self, bounds:[float, float, float, float, float,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          float]) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void GetRASBounds(double bounds[6]) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get bounding box in global RAS form (xmin,xmax, ymin,ymax,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      zmin,zmax). This method returns the bounds of the object with any
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      transforms that may be applied to it.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetBounds()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetUnstructuredGrid(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetUnstructuredGrid(self) -> vtkUnstructuredGrid
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkUnstructuredGrid *GetUnstructuredGrid()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh if it is an unstructured grid.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMesh(), SetAndObserveMesh()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetUnstructuredGridConnection(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetUnstructuredGridConnection(self) -> vtkAlgorithmOutput
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkAlgorithmOutput *GetUnstructuredGridConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the input mesh pipeline if the mesh is an unstructured
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      grid.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMeshConnection(), SetUnstructuredGridConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasCellScalarName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasCellScalarName(self, scalarName:str) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasCellScalarName(const char *scalarName)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return true if the mesh cell data has an array with ascalarName
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa HasCellScalarName
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasCopyContent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasCopyContent(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasCopyContent() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns true if the class supports deep and shallow copying node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          content.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasPointScalarName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasPointScalarName(self, scalarName:str) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasPointScalarName(const char *scalarName)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return true if the mesh point data has an array with ascalarName
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa HasPointScalarName
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  IsA(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      IsA(self, type:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkTypeBool IsA(const char *type) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return 1 if this class is the same type of (or a subclass of) the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      named class. Returns 0 otherwise. This method works in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      combination with vtkTypeMacro found in vtkSetGet.h.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  IsTypeOf(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      IsTypeOf(type:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static vtkTypeBool IsTypeOf(const char *type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return 1 if this class type is the same type of (or a subclass
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      of) the named class. Returns 0 otherwise. This method works in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      combination with vtkTypeMacro found in vtkSetGet.h.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  NewInstance(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      NewInstance(self) -> vtkMRMLModelNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLModelNode *NewInstance()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ProcessMRMLEvents(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ProcessMRMLEvents(self, __a:vtkObject, __b:int, __c:Pointer)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void ProcessMRMLEvents(vtkObject *, unsigned long, void *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      alternative method to propagate events generated in Display nodes
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveScalars(self, scalarName:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveScalars(const char *scalarName)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Remove an array from the mesh's point/cell data.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SafeDownCast(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SafeDownCast(o:vtkObjectBase) -> vtkMRMLModelNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static vtkMRMLModelNode *SafeDownCast(vtkObjectBase *o)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetActiveCellScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetActiveCellScalars(self, scalarName:str, attributeType:int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int SetActiveCellScalars(const char *scalarName,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int attributeType)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set the active poly data point scalar array, checks for the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scalarName as being a valid point array, and then will set it to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      be the active attribute type as designated by typeName (scalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      if null or empty). typeName is one of the valid strings as
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      returned from vtkDataSetAttributes::GetAttributeTypeAsString,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetActiveScalars converts it to an integer type to pass onto the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Point/Cell methods Also updates the display node's active scalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetActivePointScalars(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetActivePointScalars(self, scalarName:str, attributeType:int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int SetActivePointScalars(const char *scalarName,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int attributeType)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set the active poly data point scalar array, checks for the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scalarName as being a valid point array, and then will set it to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      be the active attribute type as designated by typeName (scalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      if null or empty). typeName is one of the valid strings as
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      returned from vtkDataSetAttributes::GetAttributeTypeAsString,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetActiveScalars converts it to an integer type to pass onto the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Point/Cell methods Also updates the display node's active scalars
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveMesh(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveMesh(self, Mesh:vtkPointSet) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetAndObserveMesh(vtkPointSet *Mesh)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe mesh for this model.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMesh()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObservePolyData(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObservePolyData(self, polyData:vtkPolyData) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetAndObservePolyData(vtkPolyData *polyData)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe mesh for this model.\deprecated Use
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveMesh instead.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetPolyDataConnection(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetPolyDataConnection(self, inputPort:vtkAlgorithmOutput) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetPolyDataConnection(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkAlgorithmOutput *inputPort)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe polydata pipeline. It is propagated to the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      display nodes.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMeshConnection(), SetUnstructuredGridConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetUnstructuredGridConnection(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetUnstructuredGridConnection(self, inputPort:vtkAlgorithmOutput)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetUnstructuredGridConnection(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkAlgorithmOutput *inputPort)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe unstructured grid pipeline. It is propagated to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the display nodes.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetMeshConnection(), SetPolyDataConnection()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ShowDefaultScalarData(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ShowDefaultScalarData(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool ShowDefaultScalarData()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Determine if the mesh stores scalar data data that the user may
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      want to see and if such data is found then display it. Currently,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      it displays single-component scalar array (with a colormap), and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      3 or 4 component unsigned char array as RGB or RGBA value (with
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      direct mapping). Return true if suitable scalar data was found
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      and set to be displayed.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  TransformBoundsToRAS(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      TransformBoundsToRAS(self, inputBounds_Local:[float, float, float,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           float, float, float], outputBounds_RAS:[float, float, float,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          float, float, float]) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void TransformBoundsToRAS(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          double inputBounds_Local[6], double outputBounds_RAS[6])
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Transforms bounds from the local coordinate system to the RAS
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      (world) coordinate system. Only the corner points are used for
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      determining the new bounds, therefore in case of non-linear
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      transforms the transformed bounds may not fully contain the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      transformed model points.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __delattr__(self, name, /)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Implement delattr(self, name).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __getattribute__(self, name, /)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return getattr(self, name).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __repr__(self, /)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return repr(self).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __setattr__(self, name, value, /)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Implement setattr(self, name, value).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __str__(self, /)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return str(self).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Static methods defined here:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __new__(*args, **kwargs) from builtins.type
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Create and return a new object.  See help(type) for accurate signature.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Data descriptors defined here:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __dict__
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Dictionary of attributes set by user.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __this__
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Pointer to the C++ object.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Data and other attributes defined here:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  MeshModifiedEvent = 17001
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  MeshTypeHint = <class 'MRMLCorePython.vtkMRMLModelNode.MeshTypeHint'>
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  PolyDataMeshType = 0
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  PolyDataModifiedEvent = 17001
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UnstructuredGridMeshType = 1
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  __vtkname__ = 'vtkMRMLModelNode'
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkMRMLDisplayableNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddAndObserveDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddAndObserveDisplayNodeID(self, displayNodeID:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddAndObserveDisplayNodeID(const char *displayNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience method that adds a display node ID at the end of the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserverNthDisplayNodeID(int, const char*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Copy(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Copy(self, node:vtkMRMLNode) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void Copy(vtkMRMLNode *node) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Copy the node's attributes to this object
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CreateDefaultSequenceDisplayNodes(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateDefaultSequenceDisplayNodes(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void CreateDefaultSequenceDisplayNodes()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Creates the most appropriate display node class for storing a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      sequence of these nodes. If the method is not overwritten by
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      subclass then it creates display node by calling,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateDefaultDisplayNodes method.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisplayClassVisibility(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisplayClassVisibility(self, nodeClass:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetDisplayClassVisibility(const char *nodeClass)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get/Set visibility of display nodes of certain class if nodeClass
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      is 0, get/set visibility of all display nodes It ignores display
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      nodes that have ShowMode other than
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLDisplayNode::ShowDefault.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisplayNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisplayNode(self) -> vtkMRMLDisplayNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLDisplayNode *GetDisplayNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that returns the first display node.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNthDisplayNode(int), GetDisplayNodeID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisplayNodeID(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetDisplayNodeID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that returns the first display node id.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNthDisplayNodeID(int), GetDisplayNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisplayNodeReferenceRole(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisplayNodeReferenceRole(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual const char *GetDisplayNodeReferenceRole()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisplayVisibility(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisplayVisibility(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetDisplayVisibility()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility to return the visibility of all the display nodes. Return
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      0 if they are all hidden, 1 if all are visible and 2 if some are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      visible and some are hidden. It ignores display nodes that have
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ShowMode other than vtkMRMLDisplayNode::ShowDefault.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthDisplayNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthDisplayNode(self, n:int) -> vtkMRMLDisplayNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLDisplayNode *GetNthDisplayNode(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get associated display MRML node. Can be 0 in temporary states;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      e.g. if the displayable node has no scene, or if the associated
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      display is not yet into the scene. If not cached, it internally
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scans (slow) the scene to search for the associated display node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ID. If the displayable node is no longer in the scene (GetScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      == 0), it happens after the node is removed from the scene
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      (scene->RemoveNode(dn), the returned display node is 0.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNthDisplayNodeByClass()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthDisplayNodeID(self, n:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNthDisplayNodeID(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the string of the Nth display node ID. Or 0 if no such
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node exist. Warning, a temporary char generated from a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      std::string::c_str() is returned.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfDisplayNodes(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfDisplayNodes(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetNumberOfDisplayNodes()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the number of display node IDs (and display nodes as they
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      always have the same size).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasDisplayNodeID(self, displayNodeID:str) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasDisplayNodeID(const char *displayNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return true if displayNodeID is in the display node ID list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveAllDisplayNodeIDs(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveAllDisplayNodeIDs(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveAllDisplayNodeIDs()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Remove all display node IDs and associated display nodes.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveNthDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveNthDisplayNodeID(self, n:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveNthDisplayNodeID(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience method that removes the Nth display node ID from the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserverNthDisplayNodeID(int, const char*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveDisplayNodeID(self, displayNodeID:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAndObserveDisplayNodeID(const char *displayNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience method that sets the first display node ID.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserverNthDisplayNodeID(int, const char*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveNthDisplayNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveNthDisplayNodeID(self, n:int, displayNodeID:str)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAndObserveNthDisplayNodeID(int n,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *displayNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe the Nth display node ID in the list. If n is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      larger than the number of display nodes, the display node ID is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      added at the end of the list. If DisplayNodeID is 0, the node ID
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      is removed from the list. When a node ID is set (added or
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      changed), its corresponding node is searched (slow) into the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene and cached for fast future access. It is possible however
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      that the node is not yet into the scene (due to some temporary
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      state (at loading time for example). UpdateScene() can later be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      called to retrieve the display nodes from the scene
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      (automatically done when loading a scene). Get(Nth)DisplayNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      also scan the scene if the node was not yet cached.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserveDisplayNodeID(const char*),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddAndObserveDisplayNodeID(const char *),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveNthDisplayNodeID(int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDisplayClassVisibility(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDisplayClassVisibility(self, nodeClass:str, visible:int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetDisplayClassVisibility(const char *nodeClass,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           int visible)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDisplayVisibility(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDisplayVisibility(self, visible:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetDisplayVisibility(int visible)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSelectable(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSelectable(self, __a:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetSelectable(int) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Override default selectable setting to notify display node about
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the change.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  WriteCLI(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      WriteCLI(self, commandLine:[str, ...], prefix:str,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          coordinateSystemFlag:int=..., multipleFlag:int=1) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void WriteCLI(std::vector<std::string> &commandLine,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          std::string prefix,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int coordinateSystemFlag=vtkMRMLStorageNode::CoordinateSystemRAS,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           int multipleFlag=1)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Write this node's information to a vector of strings for passing
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      to a CLI. If the prefix is not an empty string, it gets pushed
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      onto the vector of strings before the information.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      coordinateSystemFlag = vtkMRMLStorageNode::CoordinateSystemRAS or
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLStorageNode::CoordinateSystemLPS multipleFlag = 1 for the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      whole list, 0 for the first in the list
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Data and other attributes inherited from vtkMRMLDisplayableNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  DisplayModifiedEvent = 17000
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkMRMLTransformableNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ApplyTransformMatrix(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ApplyTransformMatrix(self, transformMatrix:vtkMatrix4x4) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void ApplyTransformMatrix(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkMatrix4x4 *transformMatrix)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience function to allow transforming a node by specifying a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      transformation matrix.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa ApplyTransformMatrix, ApplyTransform
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetParentTransformNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetParentTransformNode(self) -> vtkMRMLTransformNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLTransformNode *GetParentTransformNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Associated transform MRML node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetTransformNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetTransformNodeID(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetTransformNodeID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get referenced transform node id
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HardenTransform(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HardenTransform(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HardenTransform()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Apply the associated transform to the transformable node. Return
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      true on success, false otherwise.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveTransformNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveTransformNodeID(self, transformNodeID:str) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool SetAndObserveTransformNodeID(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *transformNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set a reference to transform node Returns true on success. The
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      method will fail if a child transform of a transform node is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      attempted to be set as parent to prevent circular reference. If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      current node or new parent transform node is not added to the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene yet then circular reference is not checked and it is the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      developer's responsibility no child transform is set as parent.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  TransformPointFromWorld(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      TransformPointFromWorld(self, inWorld:(float, float, float),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          outLocal:[float, float, float]) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void TransformPointFromWorld(const double inWorld[3],
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           double outLocal[3])
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      TransformPointFromWorld(self, inWorld:vtkVector3d,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          outLocal:vtkVector3d) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void TransformPointFromWorld(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const vtkVector3d &inWorld, vtkVector3d &outLocal)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function to convert a point position in world coordinate
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      system to markup node's coordinate system
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa TransformPointToWorld, SetAndObserveTransformNodeID
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  TransformPointToWorld(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      TransformPointToWorld(self, inLocal:(float, float, float),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          outWorld:[float, float, float]) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void TransformPointToWorld(const double inLocal[3],
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          double outWorld[3])
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      TransformPointToWorld(self, inLocal:vtkVector3d,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          outWorld:vtkVector3d) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void TransformPointToWorld(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const vtkVector3d &inLocal, vtkVector3d &outWorld)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function to convert a point position in the node's
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      coordinate system to world coordinate system. Note for transform
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      nodes: the node coordinate system is transformed by all the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      parent transforms, but not by the transform that is stored in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      current node. To get all the transform, including that is stored
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      in the current transform node,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLTransformNode::GetTransformBetweenNodes() method can be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      used.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa TransformPointFromWorld, SetAndObserveTransformNodeID
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Data and other attributes inherited from vtkMRMLTransformableNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  TransformModifiedEvent = 15000
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkMRMLStorableNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddAndObserveStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddAndObserveStorageNodeID(self, storageNodeID:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddAndObserveStorageNodeID(const char *storageNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddDefaultStorageNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddDefaultStorageNode(self, filename:str=...) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual bool AddDefaultStorageNode(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *filename=nullptr)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns true on success. If storage node is not needed then
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      storage node is not created and the method returns with true.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CreateDefaultSequenceStorageNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CreateDefaultSequenceStorageNode(self) -> vtkMRMLStorageNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkMRMLStorageNode *CreateDefaultSequenceStorageNode(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          )
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Creates the most appropriate storage node class for storing a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      sequence of these nodes. The caller owns the returned object and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      responsible for deleting it. If the method is not overwritten by
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      subclass then it creates vtkMRMLSequenceStorageNode, which saves
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the sequence in a MRML scene bundle file.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDefaultSequenceStorageNodeClassName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDefaultSequenceStorageNodeClassName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual std::string GetDefaultSequenceStorageNodeClassName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthStorageNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthStorageNode(self, n:int) -> vtkMRMLStorageNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLStorageNode *GetNthStorageNode(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get associated display MRML node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthStorageNodeID(self, n:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNthStorageNodeID(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfStorageNodes(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfStorageNodes(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetNumberOfStorageNodes()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetSlicerDataType(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetSlicerDataType(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetSlicerDataType()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetStorageNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetStorageNode(self) -> vtkMRMLStorageNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLStorageNode *GetStorageNode()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetStorageNodeID(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetStorageNodeID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetUserTagTable(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetUserTagTable(self) -> vtkTagTable
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkTagTable *GetUserTagTable()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Methods for user-specified metadata
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasStorageNodeID(self, storageNodeID:str) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasStorageNodeID(const char *storageNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return true if storageNodeID is in the storage node ID list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveNthStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveNthStorageNodeID(self, n:int, storageNodeID:str)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAndObserveNthStorageNodeID(int n,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *storageNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveStorageNodeID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveStorageNodeID(self, storageNodeID:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAndObserveStorageNodeID(const char *storageNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      String ID of the storage MRML node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDefaultSequenceStorageNodeClassName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDefaultSequenceStorageNodeClassName(self, _arg:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetDefaultSequenceStorageNodeClassName(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          std::string _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Class name of the default sequence storage node that is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      instantiated by CreateDefaultSequenceStorageNode The value is not
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      stored in the scene but it has to be set manually (for example,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      in the corresponding default node in the scene). Default value:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      "vtkMRMLSequenceStorageNode"
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa CreateDefaultSequenceStorageNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSlicerDataType(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSlicerDataType(self, type:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetSlicerDataType(const char *type)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This is describes the type of data stored in the nodes storage
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node(s). It's an informatics metadata mechanism so that Slicer
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      knows what kinds of nodes to create to receive downloaded
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      datasets, and works around potential ambiguity of file
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      extensions, etc. Method is called when storage nodes are created.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The method gets applied to any storable data that should be saved
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      with, and loaded with the scene, including nodes that are hidden
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      from editors like scalar overlays.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  StorableModified(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      StorableModified(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void StorableModified()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Allows external code to mark that the storable has been modified
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      and should therefore be selected for saving by default.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetStoredTime() StorableModifiedTime Modified()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          GetModifiedSinceRead()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UpdateScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UpdateScene(self, scene:vtkMRMLScene) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void UpdateScene(vtkMRMLScene *scene) override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Finds the storage node and read the data
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkMRMLNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddAndObserveNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddAndObserveNodeReferenceID(self, referenceRole:str,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          referencedNodeID:str, events:vtkIntArray=...,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          observeContentModifiedEvents:ContentModifiedObserveType=...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *AddAndObserveNodeReferenceID(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referenceRole, const char *referencedNodeID,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkIntArray *events=nullptr,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          ContentModifiedObserveType observeContentModifiedEvents=ContentModifiedObserveUndefined)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Add and observe a reference node from this node for a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          specificreferenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Observe Modified event by default, optionally takes array of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      events.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveEnabled then this node will get
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      notifications when any of the event in the ContentModifiedEvents
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list of the observed node is invoked. If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveUndefined then the behavior defined in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node reference role will be used.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddNodeReferenceID(self, referenceRole:str, referencedNodeID:str)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *AddNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referencedNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience method that adds a referencedNodeID at the end of the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddNodeReferenceRole(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddNodeReferenceRole(self, referenceRole:str,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          mrmlAttributeName:str=..., events:vtkIntArray=...,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          observeContentModifiedEvents:bool=False) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void AddNodeReferenceRole(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *mrmlAttributeName=nullptr,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkIntArray *events=nullptr,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          bool observeContentModifiedEvents=false)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Add a referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The referenceRole can be any unique string, for example
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      "display", "transform" etc. Optionally a MRML attribute name for
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      storing the reference in the mrml scene file can be specified.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      For example "displayNodeRef". If omitted the MRML attribute name
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      will be the same as the role. If referenceRole ends with '/', it
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      is considered as a "template" reference role that can be used to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      generate attribute names dynamically by concatenation: If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      referenceRole is "unit/" and mrmlAttributeName is "UnitRef", then
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the generated MRML attribute names for a node reference role of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      "unit/length" will be "lengthUnitRef". Use this method to add new
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      reference types to a node. This method is typically called in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      constructors of each subclass.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The optional events argument specifies what events should be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      observed by default (e.g., when loading the scene from file). If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      referenceRole ends with '/' character then events are used for
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      all roles names begins with this role name (for example, events
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      specified for referenceRole='unit/' will be used for
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      referenceRole='unit/length', referenceRole='unit/area', etc).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If observeContentModifiedEvents is enabled then this node will
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      get notifications when any of the event in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedEvents list of the observed node is invoked.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetReferenceNodeFromMRMLAttributeName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddToSceneOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddToSceneOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void AddToSceneOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddToSceneOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddToSceneOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void AddToSceneOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CopyReferences(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CopyReferences(self, node:vtkMRMLNode) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void CopyReferences(vtkMRMLNode *node)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Copy the references of the node into this.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Existing references will be replaced if found in node, or removed
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      if not in node.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  CopyWithScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CopyWithScene(self, node:vtkMRMLNode) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void CopyWithScene(vtkMRMLNode *node)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Copy everything (including Scene and ID) from another node of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the same type.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote The node is **not** added into the scene of node. You must do
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      it manually **after** calling CopyWithScene(vtkMRMLNode*) using
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLScene::AddNode(vtkMRMLNode*). Only one
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkCommand::ModifiedEvent is invoked, after the copy is fully
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      completed.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \bug Calling vtkMRMLScene::AddNode(vtkMRMLNode*) **before**
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      CopyWithScene(vtkMRMLNode*) is **NOT** supported, it will
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      unsynchronize the node internal caches. See
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      [#4078](https://github.com/Slicer/Slicer/issues/4078)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa vtkMRMLScene::AddNode(vtkMRMLNode*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  DisableModifiedEventOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      DisableModifiedEventOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void DisableModifiedEventOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  DisableModifiedEventOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      DisableModifiedEventOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void DisableModifiedEventOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  EndModify(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      EndModify(self, previousDisableModifiedEventState:int) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int EndModify(int previousDisableModifiedEventState)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      End modifying the node.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Enable Modify events if the previous state ofDisableModifiedEvent
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      flag is 0.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the number of pending events (even if
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokePendingModifiedEvent() is not called).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetAddToScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAddToScene(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetAddToScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node added to MRML scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetAttribute(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAttribute(self, name:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetAttribute(const char *name)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get value of a name value pair attribute.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return nullptr if the name does not exist.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetAttributeNames(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAttributeNames(self) -> (str, ...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: std::vector<std::string> GetAttributeNames()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAttributeNames(self, attributeNames:vtkStringArray) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void GetAttributeNames(vtkStringArray *attributeNames)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get all attribute names.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetContentModifiedEvents(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetContentModifiedEvents(self) -> vtkIntArray
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkIntArray *GetContentModifiedEvents()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return list of events that indicate that content of the node is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      modified. For example, it is not enough to observe
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkCommand::ModifiedEvent to get notified when a transform stored
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      in a transform node is modified, but
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLTransformableNode::TransformModifiedEvent must be observed
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      as well.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetCustomModifiedEventPending(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetCustomModifiedEventPending(self, eventId:int) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetCustomModifiedEventPending(int eventId)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns the number of times a custom modified event is requested
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      but not yet invoked on the node. A modified even is pending (not
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      yet invoked) if it was requested after a StartModify() call and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      EndModify() is not called yet.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetModifiedEventPending()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDescription(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDescription(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual char *GetDescription()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDisableModifiedEvent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDisableModifiedEvent(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetDisableModifiedEvent()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Turn on/off generating InvokeEvent for set macros
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetHideFromEditors(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetHideFromEditors(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetHideFromEditors()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Describes if the node is hidden.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetID(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual char *GetID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ID use by other nodes to reference this node in XML.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetInMRMLCallbackFlag(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetInMRMLCallbackFlag(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetInMRMLCallbackFlag()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Flags to avoid event loops.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \warning Do NOT use the SetMacro or it call modified on itself
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      generate even more events!
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetModifiedEventPending(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetModifiedEventPending(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetModifiedEventPending()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Number of pending modified events.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa InvokePendingModifiedEvent()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa Modified()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetDisableModifiedEvent()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual char *GetName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNodeReference(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNodeReference(self, referenceRole:str) -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *GetNodeReference(const char *referenceRole)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that returns the first referenced node.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNthNodeReference(int), GetNodeReferenceID()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNodeReferenceID(self, referenceRole:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNodeReferenceID(const char *referenceRole)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Utility function that returns the first node id for a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          specificreferenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNthNodeReferenceID(int), GetNodeReference()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNodeReferenceRoles(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNodeReferenceRoles(self, roles:[str, ...]) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void GetNodeReferenceRoles(std::vector<std::string> &roles)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get reference roles of the present node references.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNodeReferenceRoles(), GetNodeReferenceRoles(),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          GetNthNodeReferenceRole()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthNodeReference(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthNodeReference(self, referenceRole:str, n:int) -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *GetNthNodeReference(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get referenced MRML node for a specific referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Can be 0 in temporary states; e.g. if the referenced node has no
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene, or if the referenced is not yet into the scene. If not
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      cached, it internally scans (slow) the scene to search for the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      associated referenced node ID. If the referencing node is no
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      longer in the scene (GetScene() == 0), it happens after the node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      is removed from the scene (scene->RemoveNode(dn), the returned
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      referenced node is 0.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthNodeReferenceID(self, referenceRole:str, n:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNthNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the string of the Nth node ID for a specific reference
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          role.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return 0 if no such node exist.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \warning A temporary char generated from a std::string::c_str()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      is returned.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNthNodeReferenceRole(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNthNodeReferenceRole(self, n:int) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetNthNodeReferenceRole(int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get a specific node reference role name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNodeReferenceRoles(), GetNodeReferenceRoles(),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          GetNthNodeReferenceRole()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfNodeReferenceRoles(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfNodeReferenceRoles(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetNumberOfNodeReferenceRoles()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get number of node reference role names.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetNodeReferenceRoles(), GetNodeReferenceRoles(),
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          GetNthNodeReferenceRole()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetNumberOfNodeReferences(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetNumberOfNodeReferences(self, referenceRole:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetNumberOfNodeReferences(const char *referenceRole)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the number of node IDs for a specific reference role (and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          nodes as they always
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      have the same size).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetSaveWithScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetSaveWithScene(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetSaveWithScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Save node with MRML scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetScene(self) -> vtkMRMLScene
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkMRMLScene *GetScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get the scene this node has been added to.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetSelectable(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetSelectable(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetSelectable()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Describes if the node is selectable.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetSelected(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetSelected(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int GetSelected()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get/Set for Selected
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetSingletonTag(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetSingletonTag(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual char *GetSingletonTag()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetTypeDisplayName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetTypeDisplayName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual const char *GetTypeDisplayName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get node type display name (like "Closed Curve", "Markup", etc).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote Subclasses should override this method to provide a more
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      appropriate and translatable name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetUndoEnabled(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetUndoEnabled(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual bool GetUndoEnabled()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Specifies if the state of this node is stored in the scene's undo
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      buffer. False by default to make sure that undo can be enabled
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      selectively, only for nodes that are prepared to work correctly
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      when saved/restored. Nodes with different UndoEnabled value must
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      not reference to each other, because restoring states could lead
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      to unresolved node references. Therefore, when undo is enabled
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      for a certain node, it must be enabled for nodes that it
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      references (for example, if undo is enabled for vtkMRMLModelNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      then it must be enabled for vtkMRMLModelDisplayNode and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLModelStorageNode as well).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasNodeReferenceID(self, referenceRole:str, referencedNodeID:str)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool HasNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referencedNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return true if referencedNodeID is in the node ID list for a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      specific referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If nullptr is specified as role then all roles are checked.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HideFromEditorsOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HideFromEditorsOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void HideFromEditorsOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HideFromEditorsOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HideFromEditorsOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void HideFromEditorsOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  InvokeCustomModifiedEvent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokeCustomModifiedEvent(self, eventId:int, callData:Pointer=...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void InvokeCustomModifiedEvent(int eventId,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          void *callData=nullptr)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method allows the node to compress events.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Instead of invoking a certain event several times, the event is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      called only once, for all the invocations that are made between
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      StartModify() and EndModify().
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Typical usage is to group several `...Added`, `...Removed`,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      `...Modified` events into one, to improve performance.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      callData is passed to InvokeEvent() if the event is invoked
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      immediately.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If the event is not invoked immediately then it will be sent with
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      `callData=nullptr`.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  InvokePendingModifiedEvent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokePendingModifiedEvent(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int InvokePendingModifiedEvent()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Invokes any modified events that are `pending`.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Pending modified events were generated while the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      DisableModifiedEvent flag was nonzero.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns the total number of pending modified events that have
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      been replaced by the just invoked modified event(s).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  IsSingleton(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      IsSingleton(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool IsSingleton()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Modified(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Modified(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void Modified() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Customized version of Modified() allowing to compress
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkCommand::ModifiedEvent.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      It overrides the vtkObject method so that all changes to the node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      which would normally generate a vtkCommand::ModifiedEvent can be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      grouped into an `atomic` operation.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Typical usage would be to disable modified events, call a series
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      of `Set*` operations, and then re-enable modified events and call
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokePendingModifiedEvent() to invoke the event (if any of the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      `Set*` calls actually changed the values of the instance
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      variables).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa GetDisableModifiedEvent()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  OnNodeAddedToScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      OnNodeAddedToScene(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void OnNodeAddedToScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Updates this node if it depends on other nodes when the scene is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      read in This method is called by scene when a node added to a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ProcessChildNode(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ProcessChildNode(self, __a:vtkMRMLNode) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void ProcessChildNode(vtkMRMLNode *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set dependencies between this node and a child node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      when parsing XML file.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveAttribute(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveAttribute(self, name:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveAttribute(const char *name)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Remove attribute with the specified name.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveNodeReferenceIDs(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveNodeReferenceIDs(self, referenceRole:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveNodeReferenceIDs(const char *referenceRole)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Remove all node IDs and associated nodes for a specific
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If referenceRole is 0 remove references for all roles
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveNthNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveNthNodeReferenceID(self, referenceRole:str, n:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveNthNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          int n)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Convenience method that removes the Nth node ID from the list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Reset(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Reset(self, defaultNode:vtkMRMLNode) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void Reset(vtkMRMLNode *defaultNode)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Reset node attributes to the initial state as defined in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      constructor or the passed default node.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      It preserves values of the following dynamic attributes that may
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      be set by an application:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      * SaveWithScene
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      * HideFromEditors
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      * Selectable
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      * SingletonTag.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If a defaultNode pointer is passed then the values stored in that
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node will be used to set the node contents. If defaultNode is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      nullptr then the values set in the constructor of the class will
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      be used to set the node contents.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote Other attributes that needs to be preserved should be handled
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      in the subclass.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetSaveWithScene()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetHideFromEditors()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetSelectable()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetSingletonTag()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SaveWithSceneOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SaveWithSceneOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SaveWithSceneOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SaveWithSceneOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SaveWithSceneOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SaveWithSceneOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SelectableOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SelectableOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SelectableOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SelectableOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SelectableOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SelectableOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SelectedOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SelectedOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SelectedOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SelectedOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SelectedOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SelectedOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAddToScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAddToScene(self, _arg:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetAddToScene(int _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAddToSceneNoModify(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAddToSceneNoModify(self, value:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAddToSceneNoModify(int value)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveNodeReferenceID(self, referenceRole:str,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          referencedNodeID:str, events:vtkIntArray=...,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          observeContentModifiedEvents:ContentModifiedObserveType=...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *SetAndObserveNodeReferenceID(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referenceRole, const char *referencedNodeID,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkIntArray *events=nullptr,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          ContentModifiedObserveType observeContentModifiedEvents=ContentModifiedObserveUndefined)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe a reference node from this node for a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          specificreferenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Observe Modified event by default, optionally takes array of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      events
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveEnabled then this node will get
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      notifications when any of the event in the ContentModifiedEvents
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list of the observed node is invoked. If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveUndefined then the behavior defined in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node reference role will be used.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAndObserveNthNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAndObserveNthNodeReferenceID(self, referenceRole:str, n:int,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          referencedNodeID:str, events:vtkIntArray=...,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          observeContentModifiedEvents:ContentModifiedObserveType=...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *SetAndObserveNthNodeReferenceID(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referenceRole, int n,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referencedNodeID, vtkIntArray *events=nullptr,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          ContentModifiedObserveType observeContentModifiedEvents=ContentModifiedObserveUndefined)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set and observe the Nth node ID for a specific reference role.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If n is larger than the number of reference nodes, the node ID is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      added at the end of the list. If nodeReferenceID is 0, the node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ID is removed from the list. When a node ID is set (added or
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      changed), its corresponding node is searched (slow) into the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene and cached for fast future access. It is possible however
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      that the node is not yet into the scene (due to some temporary
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      state (at loading time for example). UpdateScene() can later be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      called to retrieve the nodes from the scene (automatically done
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      when loading a scene). Get(Nth)NodeReference() also scan the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      scene if the node was not yet cached.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveEnabled then this node will get
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      notifications when any of the event in the ContentModifiedEvents
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      list of the observed node is invoked. If
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      observeContentModifiedEvents is set to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ContentModifiedObserveUndefined then the behavior defined in the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node reference role will be used.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetAndObserveNodeReferenceID(const char*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa AddAndObserveNodeReferenceID(const char*)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa RemoveNthNodeReferenceID(int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetAttribute(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetAttribute(self, name:str, value:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetAttribute(const char *name, const char *value)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set a name value pair attribute.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Fires a vtkCommand::ModifiedEvent.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Attributes are written in the XML. If value is 0, the attribute
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      name is removed from the pair list.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This function is a no-op if name is null or empty.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa WriteXML()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDescription(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDescription(self, _arg:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetDescription(const char *_arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Text description of this node, to be set by the user.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDisableModifiedEvent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDisableModifiedEvent(self, onOff:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetDisableModifiedEvent(int onOff)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetHideFromEditors(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetHideFromEditors(self, _arg:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetHideFromEditors(int _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetInMRMLCallbackFlag(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetInMRMLCallbackFlag(self, flag:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetInMRMLCallbackFlag(int flag)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetName(self, _arg:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetName(const char *_arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Name of this node, to be set by the user
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetNodeReferenceID(self, referenceRole:str, referencedNodeID:str)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *SetNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *referencedNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set a reference to a node with specified nodeID from this node
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          for a specific referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetNthNodeReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetNthNodeReferenceID(self, referenceRole:str, n:int,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          referencedNodeID:str) -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkMRMLNode *SetNthNodeReferenceID(const char *referenceRole,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |           int n, const char *referencedNodeID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set a N-th reference from this node with
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          specifiedreferencedNodeID for a specific referenceRole.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSaveWithScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSaveWithScene(self, _arg:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetSaveWithScene(int _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetScene(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetScene(self, scene:vtkMRMLScene) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetScene(vtkMRMLScene *scene)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method is for internal use only.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Use AddNode method of vtkMRMLScene to add a node to the scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Internally calls SetSceneReferences()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa SetSceneReferences()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSceneReferences(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSceneReferences(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetSceneReferences()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Update the references of the node to the scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote You must unsure that a valid scene is set before calling
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSceneReferences().
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSelected(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSelected(self, _arg:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetSelected(int _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSingletonOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSingletonOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetSingletonOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSingletonOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSingletonOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetSingletonOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetSingletonTag(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetSingletonTag(self, _arg:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetSingletonTag(const char *_arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Tag that make this node a singleton in the scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If set to nullptr, multiple instances of this node class are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      allowed.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If set to a non-nullptr string, the node will be a singleton and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the scene will replace this node instead of adding new instances.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The SingletonTag is used by the scene to build a unique ID.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If the there can only be one instance of a given node class in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the scene, then the singleton tag should be Singleton. For
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      example, the interaction and selection nodes are named Selection
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      and Interaction, with Singleton tags set to Singleton, and with
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      IDs set to vtkMRMLSelectionNodeSingleton and
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLInteractionNodeSingleton. If the singleton node is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      associated with a specific module it should use the module name,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      which already needs to be unique, as the tag. The Editor module
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      uses this naming convention, with a parameter node that has a
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      singleton tag of Editor and a node ID of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLScriptedModuleNodeEditor. If the there is more than one
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      instance of the node class then the singleton tag should be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Singleton post-pended with a unique identifier for that specific
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      node (e.g. the name). Any new color nodes should use this
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      convention, with a name of NewName, a Singleton tag of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SingletonNewName, leading to an ID of
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtkMRMLColorTableNodeSingletonNewName. The existing MRML nodes
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      don't always use these conventions but are kept unchanged for
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      backward compatibility.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa vtkMRMLScene::BuildID
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetUndoEnabled(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetUndoEnabled(self, _arg:bool) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetUndoEnabled(bool _arg)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  StartModify(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      StartModify(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual int StartModify()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Start modifying the node. Disable Modify events.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns the previous state of DisableModifiedEvent flag that
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      should be passed to EndModify() method.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa EndModify()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  URLDecodeString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      URLDecodeString(self, inString:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *URLDecodeString(const char *inString)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Decode a URL string.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns the string (null) if the input is null.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote Currently only works on %, space, ', ", <, >
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa URLEncodeString()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  URLEncodeString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      URLEncodeString(self, inString:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *URLEncodeString(const char *inString)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Encode a URL string.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns the string (null) if the input is null.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      ote Currently only works on %, space, ', ", <, >
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa URLDecodeString()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UndoEnabledOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UndoEnabledOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void UndoEnabledOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UndoEnabledOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UndoEnabledOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void UndoEnabledOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UpdateReferenceID(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UpdateReferenceID(self, oldID:str, newID:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void UpdateReferenceID(const char *oldID,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const char *newID)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Update the stored reference to another node in the scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UpdateReferences(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UpdateReferences(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void UpdateReferences()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The method should remove all pointers and observations to all
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          nodes
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      that are not in the scene anymore.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method is called when one or more referenced nodes are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      deleted from the scene.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  XMLAttributeDecodeString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      XMLAttributeDecodeString(self, inString:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: std::string XMLAttributeDecodeString(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const std::string &inString)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Decode an XML attribute string.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Important: attributes that vtkMRMLNode::ReadXMLAttributes method
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      receives are already decoded, therefore no XML attribute decoding
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      must not be applied to those strings.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa XMLAttributeEncodeString()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  XMLAttributeEncodeString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      XMLAttributeEncodeString(self, inString:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: std::string XMLAttributeEncodeString(
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          const std::string &inString)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Encode an XML attribute string (replaces special characters by
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          code sequences)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      \sa XMLAttributeDecodeString()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Data and other attributes inherited from vtkMRMLNode:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ContentModifiedObserveDisabled = 0
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ContentModifiedObserveEnabled = 1
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ContentModifiedObserveType = <class 'MRMLCorePython.vtkMRMLNode.Conten...
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ContentModifiedObserveUndefined = -1
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HierarchyModifiedEvent = 16000
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  IDChangedEvent = 16001
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ReferenceAddedEvent = 16002
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ReferenceModifiedEvent = 16003
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ReferenceRemovedEvent = 16004
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ReferencedNodeModifiedEvent = 16005
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkmodules.vtkCommonCore.vtkObject:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  AddObserver(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      AddObserver(self, event:int, command:Callback, priority:float=0.0) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: unsigned long AddObserver(const char* event,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |          vtkCommand* command, float priority=0.0f)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Add an event callback command(o:vtkObject, event:int) for an event type.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Returns a handle that can be used with RemoveEvent(event:int).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  BreakOnError(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      BreakOnError() -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static void BreakOnError()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method is called when vtkErrorMacro executes. It allows the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      debugger to break on error.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  DebugOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      DebugOff(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void DebugOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Turn debugging output off.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  DebugOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      DebugOn(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void DebugOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Turn debugging output on.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetCommand(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetCommand(self, tag:int) -> vtkCommand
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkCommand *GetCommand(unsigned long tag)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetDebug(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetDebug(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool GetDebug()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get the value of the debug flag.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetGlobalWarningDisplay(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetGlobalWarningDisplay() -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static int GetGlobalWarningDisplay()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetMTime(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetMTime(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual vtkMTimeType GetMTime()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return this object's modified time.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetObjectDescription(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetObjectDescription(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: std::string GetObjectDescription() override;
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The object description printed in messages and PrintSelf output.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      To be used only for reporting purposes.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetObjectName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetObjectName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual std::string GetObjectName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GlobalWarningDisplayOff(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GlobalWarningDisplayOff() -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static void GlobalWarningDisplayOff()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GlobalWarningDisplayOn(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GlobalWarningDisplayOn() -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static void GlobalWarningDisplayOn()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  HasObserver(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasObserver(self, event:int, __b:vtkCommand) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkTypeBool HasObserver(unsigned long event, vtkCommand *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasObserver(self, event:str, __b:vtkCommand) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkTypeBool HasObserver(const char *event, vtkCommand *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasObserver(self, event:int) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkTypeBool HasObserver(unsigned long event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      HasObserver(self, event:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: vtkTypeBool HasObserver(const char *event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  InvokeEvent(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokeEvent(self, event:int, callData:Any) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int InvokeEvent(unsigned long event, void* callData)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokeEvent(self, event:str, callData:Any) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int InvokeEvent(const char* event, void* callData)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokeEvent(self, event:int) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int InvokeEvent(unsigned long event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InvokeEvent(self, event:str) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int InvokeEvent(const char* event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method invokes an event and returns whether the event was
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      aborted or not. If the event was aborted, the return value is 1,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      otherwise it is 0.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveAllObservers(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveAllObservers(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveAllObservers()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveObserver(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObserver(self, __a:vtkCommand) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObserver(vtkCommand *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObserver(self, tag:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObserver(unsigned long tag)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  RemoveObservers(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObservers(self, event:int, __b:vtkCommand) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObservers(unsigned long event, vtkCommand *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObservers(self, event:str, __b:vtkCommand) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObservers(const char *event, vtkCommand *)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObservers(self, event:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObservers(unsigned long event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      RemoveObservers(self, event:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void RemoveObservers(const char *event)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetDebug(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetDebug(self, debugFlag:bool) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetDebug(bool debugFlag)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set the value of the debug flag. A true value turns debugging on.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetGlobalWarningDisplay(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetGlobalWarningDisplay(val:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static void SetGlobalWarningDisplay(int val)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This is a global flag that controls whether any debug, warning or
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      error messages are displayed.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetObjectName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetObjectName(self, objectName:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void SetObjectName(const std::string &objectName)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Set/get the name of this object for reporting purposes. The name
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      appears in warning and debug messages and in the Print output.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Setting the object name does not change the MTime and does not
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      invoke a ModifiedEvent. Derived classes implementing copying
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      methods are expected not to copy the ObjectName.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Methods inherited from vtkmodules.vtkCommonCore.vtkObjectBase:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  FastDelete(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      FastDelete(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void FastDelete()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Delete a reference to this object.  This version will not invoke
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      garbage collection and can potentially leak the object if it is
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      part of a reference loop.  Use this method only when it is known
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      that the object has another reference and would not be collected
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      if a full garbage collection check were done.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetAddressAsString(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetAddressAsString(self, classname:str) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Get address of C++ object in format 'Addr=%p' after casting to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the specified type.  This method is obsolete, you can get the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      same information from o.__this__.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetClassName(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetClassName(self) -> str
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: const char *GetClassName()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the class name as a string.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetIsInMemkind(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetIsInMemkind(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: bool GetIsInMemkind()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      A local state flag that remembers whether this object lives in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      the normal or extended memory space.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetReferenceCount(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetReferenceCount(self) -> int
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: int GetReferenceCount()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Return the current reference count of this object.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  GetUsingMemkind(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      GetUsingMemkind() -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static bool GetUsingMemkind()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      A global state flag that controls whether vtkObjects are
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      constructed in the usual way (the default) or within the extended
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      memory space.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  InitializeObjectBase(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      InitializeObjectBase(self) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void InitializeObjectBase()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Register(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Register(self, o:vtkObjectBase)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void Register(vtkObjectBase *o)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Increase the reference count by 1.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetMemkindDirectory(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetMemkindDirectory(directoryname:str) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: static void SetMemkindDirectory(const char *directoryname)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The name of a directory, ideally mounted -o dax, to memory map an
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      extended memory space within. This must be called before any
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      objects are constructed in the extended space. It can not be
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      changed once setup.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  SetReferenceCount(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      SetReferenceCount(self, __a:int) -> None
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: void SetReferenceCount(int)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Sets the reference count. (This is very dangerous, use with
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      care.)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UnRegister(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UnRegister(self, o:vtkObjectBase)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual void UnRegister(vtkObjectBase* o)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Decrease the reference count (release by another object). This
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      has the same effect as invoking Delete() (i.e., it reduces the
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      reference count by 1).
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  UsesGarbageCollector(...)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      UsesGarbageCollector(self) -> bool
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      C++: virtual bool UsesGarbageCollector()
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Indicate whether the class uses `vtkGarbageCollector` or not.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      Most classes will not need to do this, but if the class
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      participates in a strongly-connected reference count cycle,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      participation can resolve these cycles.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      If overriding this method to return true, the `ReportReferences`
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      method should be overridden to report references that may be in
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      cycles.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  ----------------------------------------------------------------------
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  Class methods inherited from vtkmodules.vtkCommonCore.vtkObjectBase:
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |  override(...) from builtins.type
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      This method can be used to override a VTK class with a Python subclass.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The class type passed to override will afterwards be instantiated
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      instead of the type override is called on.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      For example,
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      class foo(vtk.vtkPoints):
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |        pass
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      vtk.vtkPoints.override(foo)
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      will lead to foo being instantied everytime vtkPoints() is called.
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      The main objective of this functionality is to enable developers to
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      extend VTK classes with more pythonic subclasses that contain
[INFO][Stream] 27.01.2024 13:17:36 [] (unknown:0) -  |      convenience functionality.
[INFO][Stream] 27.01.2024 13:17:37 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:17:59 [] (unknown:0) - Python console user input: help(slicer.mrmlScene.AddNewNodeByClass())
[CRITICAL][Stream] 27.01.2024 13:17:59 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:17:59 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:17:59 [] (unknown:0) - TypeError: AddNewNodeByClass() takes at least 1 argument (0 given)
[DEBUG][Qt] 27.01.2024 13:18:01 [] (unknown:0) - Python console user input: help(slicer.mrmlScene.AddNewNodeByClass)
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) - Help on built-in function AddNewNodeByClass:
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) - AddNewNodeByClass(...) method of MRMLCorePython.vtkMRMLScene instance
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     AddNewNodeByClass(self, className:str, nodeBaseName:str=...)
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -         -> vtkMRMLNode
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     C++: vtkMRMLNode *AddNewNodeByClass(std::string className,
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -         std::string nodeBaseName="")
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     Instantiate and add a node to the scene.
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     This is the preferred way to create and add a new node to the
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     scene. It ensures that the new node properties are initialized
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     considering its default nodes.
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     The method calls CreateNodeByClass(), vtkMRMLNode::SetName() and
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     AddNode().
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     ote Instead of calling SetName() after creating the node, prefer
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     passing nodeBaseName, indeed the method AddNode() ensures that
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     the final node name is unique in the scene by appending a suffix
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     if needed.
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     \sa CreateNodeByClass(), vtkMRMLNode::SetName(), AddNode()
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     \sa AddDefaultNode()
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -     \sa GenerateUniqueName()
[INFO][Stream] 27.01.2024 13:18:01 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:19:04 [] (unknown:0) - Python console user input:         new_model = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLModelNode", "ObstacleModel")
[CRITICAL][Stream] 27.01.2024 13:19:04 [] (unknown:0) -   File "<console>", line 1
[CRITICAL][Stream] 27.01.2024 13:19:04 [] (unknown:0) -     new_model = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLModelNode", "ObstacleModel")
[CRITICAL][Stream] 27.01.2024 13:19:04 [] (unknown:0) - IndentationError: unexpected indent
[DEBUG][Qt] 27.01.2024 13:19:10 [] (unknown:0) - Python console user input: new_model = slicer.mrmlScene.AddNewNodeByClass("vtkMRMLModelNode", "ObstacleModel")
[DEBUG][Qt] 27.01.2024 13:20:08 [] (unknown:0) - Python console user input: new_model.SetAndObservePolyData(z.GetOutput())
[CRITICAL][Stream] 27.01.2024 13:20:08 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:20:08 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:20:08 [] (unknown:0) - AttributeError: 'MRMLCorePython.vtkMRMLModelNode' object has no attribute 'GetOutput'
[DEBUG][Qt] 27.01.2024 13:20:16 [] (unknown:0) - Python console user input: new_model.SetAndObservePolyData(x.GetOutput())
[DEBUG][Qt] 27.01.2024 13:22:23 [] (unknown:0) - "MRB Slicer Data Bundle" Reader has successfully read the file "C:\\Users\\DANG THE HUNG\\OneDrive - King's College London\\Msc study\\7MRI0070 - Navigation in Robotic\\Working\\Week_2_4_test_2024-01-23.mrb" "[0.69s]"
[DEBUG][Qt] 27.01.2024 13:22:33 [] (unknown:0) - Switch to module:  "SegmentEditor"
[DEBUG][Qt] 27.01.2024 13:22:35 [] (unknown:0) - Switch to module:  "Markups"
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/entriesSubsample_1.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample_1.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/fakeBrainTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1_1.vtk
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_1.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_1.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_10.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_10.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_11.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_11.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_12.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_12.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_13.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_13.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_14.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_14.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_15.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_15.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_16.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_16.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_17.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_17.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_18.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_18.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_19.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_19.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_2.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_2.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_20.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_20.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_21.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_21.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_22.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_22.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_23.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_23.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_24.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_24.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_25.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_25.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_26.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_26.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_27.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_27.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_28.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_28.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_29.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_29.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_3.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_3.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_30.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_30.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_31.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_31.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_32.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_32.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_33.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_33.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_34.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_34.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_35.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_35.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_4.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_4.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_5.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_5.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_6.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_6.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_7.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_7.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_8.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_8.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/qualified_Line_9.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_9.mrk.json
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/r_cortexTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/r_hippoTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1_1.seg.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/targetsSubsample_1.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample_1.fcsv
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/ventriclesTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1_1.nrrd
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132249_973/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[INFO][VTK] 27.01.2024 13:22:49 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[DEBUG][Qt] 27.01.2024 13:22:49 [] (unknown:0) - saved  "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Working/Week_2_4_test_2024-01-23.mrb"
[WARNING][Qt] 27.01.2024 13:22:49 [] (unknown:0) - void __cdecl qSlicerSaveDataDialogPrivate::updateStatusIconFromMessageCollection(int,class vtkMRMLMessageCollection *,bool) Data save warning: "- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode1): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode2): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode3): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode4): fcsv file format only stores control point coordinates and a limited set of display properties.\n"
[DEBUG][Qt] 27.01.2024 13:22:57 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:23:39 [] (unknown:0) - Switch to module:  "Markups"
[DEBUG][Qt] 27.01.2024 13:23:45 [] (unknown:0) - Switch to module:  "Data"
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132424_38/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[INFO][VTK] 27.01.2024 13:24:24 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[DEBUG][Qt] 27.01.2024 13:24:24 [] (unknown:0) - saved  "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Working/Week_2_4_test_2024-01-23.mrb"
[WARNING][Qt] 27.01.2024 13:24:24 [] (unknown:0) - void __cdecl qSlicerSaveDataDialogPrivate::updateStatusIconFromMessageCollection(int,class vtkMRMLMessageCollection *,bool) Data save warning: "- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode3): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode4): fcsv file format only stores control point coordinates and a limited set of display properties.\n"
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_132509_698/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[INFO][VTK] 27.01.2024 13:25:09 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[DEBUG][Qt] 27.01.2024 13:25:09 [] (unknown:0) - saved  "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Working/Week_2_4_test_2024-01-23.mrb"
[WARNING][Qt] 27.01.2024 13:25:09 [] (unknown:0) - void __cdecl qSlicerSaveDataDialogPrivate::updateStatusIconFromMessageCollection(int,class vtkMRMLMessageCollection *,bool) Data save warning: "- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode3): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode4): fcsv file format only stores control point coordinates and a limited set of display properties.\n"
[DEBUG][Qt] 27.01.2024 13:26:28 [] (unknown:0) - Python console user input: t.find_Pathway_set_Obstacle(model3, model4)
[DEBUG][Qt] 27.01.2024 13:26:38 [] (unknown:0) - Switch to module:  "My_function"
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:26:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:27:08 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:27:17 [] (unknown:0) - Python console user input: t = My_function.My_function_for_Projects()
[DEBUG][Qt] 27.01.2024 13:27:29 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:27:31 [] (unknown:0) - Python console user input: t.find_Pathway_set_Obstacle(model3, model4)
[CRITICAL][Stream] 27.01.2024 13:27:31 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:27:31 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:27:31 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 366, in find_Pathway_set_Obstacle
[CRITICAL][Stream] 27.01.2024 13:27:31 [] (unknown:0) -     adding_tool.AddInputData(obstacle)
[CRITICAL][Stream] 27.01.2024 13:27:31 [] (unknown:0) - TypeError: AddInputData argument 1: method requires a vtkPolyData, a vtkMRMLModelNode was provided.
[DEBUG][Qt] 27.01.2024 13:27:57 [] (unknown:0) - Python console user input: a
[INFO][Stream] 27.01.2024 13:27:57 [] (unknown:0) - <MRMLCorePython.vtkMRMLModelNode(0x0000026499A86170) at 0x0000026494D2E6A0>
[DEBUG][Qt] 27.01.2024 13:28:17 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 27.01.2024 13:28:17 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 27.01.2024 13:28:17 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:18 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:28:21 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:28:24 [] (unknown:0) - Python console user input: a.GetPolyData()
[INFO][Stream] 27.01.2024 13:28:24 [] (unknown:0) - <vtkmodules.vtkCommonDataModel.vtkPolyData(0x00000264BF30B0B0) at 0x00000264A24B0460>
[DEBUG][Qt] 27.01.2024 13:28:28 [] (unknown:0) - Python console user input: t = My_function.My_function_for_Projects()
[DEBUG][Qt] 27.01.2024 13:28:32 [] (unknown:0) - Python console user input: t.find_Pathway_set_Obstacle(model3, model4)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) - vtkMRMLModelNode (00000264C90F4520)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   ID: vtkMRMLModelNode15
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   ClassName: vtkMRMLModelNode
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Name: ObstacleModel
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Debug: false
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   MTime: 15279464
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Description: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   SingletonTag: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   HideFromEditors: false
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Selectable: true
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Selected: false
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   UndoEnabled: false
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   Node references:
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -     display [displayNodeRef]: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -     storage [storageNodeRef]: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -     transform [transformNodeRef]: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   TransformNodeID: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   UnstructuredGrid: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -   PolyData: (none)
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:32 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:28:49 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 27.01.2024 13:28:49 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 27.01.2024 13:28:49 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:28:50 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:28:52 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:29:33 [] (unknown:0) - Python console user input: t.find_Pathway_set_Obstacle(model3, model4)
[DEBUG][Qt] 27.01.2024 13:29:55 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:29:55 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:29:57 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:29:57 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:29:58 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:29:59 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:29:59 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:29:59 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:29:59 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:00 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:00 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:00 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:13 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:13 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:13 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:17 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:17 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:17 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:18 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:18 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:18 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:18 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:18 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:18 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:18 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:19 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:19 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:19 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:19 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:19 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:19 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:19 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:20 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:20 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:20 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:20 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:20 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:20 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:20 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:20 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:21 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:21 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:21 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:21 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:21 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:21 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:30:22 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:30:22 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:22 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:22 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:23 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:30:23 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 395, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:30:23 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 395, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:30:23 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:34:17 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 27.01.2024 13:34:17 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 27.01.2024 13:34:17 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:34:18 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:34:20 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:34:59 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:34:59 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:35:38 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 27.01.2024 13:35:38 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 27.01.2024 13:35:38 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:35:39 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:35:51 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:36:02 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:04 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:04 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:13 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:13 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:24 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:25 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:25 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:34 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:34 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:34 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:34 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:34 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:35 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:35 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:35 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:35 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:35 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:35 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:35 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:36 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:37 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:37 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:37 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:37 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:38 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:38 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:38 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:38 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:36:38 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:36:38 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:36:39 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 396, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:36:39 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:36:40 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 396, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:36:40 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:36:49 [] (unknown:0) - Switch to module:  "Markups"
[DEBUG][Qt] 27.01.2024 13:37:59 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:38:09 [] (unknown:0) - Switch to module:  "Markups"
[DEBUG][Qt] 27.01.2024 13:39:03 [] (unknown:0) - Python console user input: t= getNode("qualified_Line_angle_34.3_degree")
[DEBUG][Qt] 27.01.2024 13:39:11 [] (unknown:0) - Python console user input: t.LockedOn()
[DEBUG][Qt] 27.01.2024 13:39:17 [] (unknown:0) - Python console user input: t.LockedOff()
[DEBUG][Qt] 27.01.2024 13:40:07 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:40:26 [] (unknown:0) - Switch to module:  "My_function"
[CRITICAL][Stream] 27.01.2024 13:40:26 [] (unknown:0) - D:\Program\Slicer 5.6.1\bin\Python\slicer\util.py:2786: UserWarning: does not have observer
[CRITICAL][Stream] 27.01.2024 13:40:26 [] (unknown:0) -   warn("does not have observer")
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) - Reloading module: My_function
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) - ------------------------------
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[INFO][Stream] 27.01.2024 13:40:28 [] (unknown:0) -
[DEBUG][Qt] 27.01.2024 13:40:29 [] (unknown:0) - Switch to module:  "Data"
[DEBUG][Qt] 27.01.2024 13:40:40 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:40:42 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:40:42 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:40:56 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:40:56 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:06 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:06 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:06 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:06 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:07 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:07 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:07 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:07 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:07 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:08 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:08 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:09 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:09 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:10 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:10 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:11 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:11 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:12 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:12 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:13 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:14 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:14 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:15 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:15 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:16 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:16 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:17 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[DEBUG][Qt] 27.01.2024 13:41:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[INFO][Stream] 27.01.2024 13:41:17 [] (unknown:0) - Good to go
[DEBUG][Qt] 27.01.2024 13:41:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 396, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:41:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 396, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - IndexError: list index out of range
[DEBUG][Qt] 27.01.2024 13:41:17 [] (unknown:0) - Python console user input: t.find_Pathway(start_point, end_point, 1)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - Traceback (most recent call last):
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "<console>", line 1, in <module>
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Module/My_extension/My_function/My_function.py", line 396, in find_Pathway
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     random_item = random.choice(self.randomlist)
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -   File "D:\Program\Slicer 5.6.1\lib\Python\Lib\random.py", line 346, in choice
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) -     return seq[self._randbelow(len(seq))]
[CRITICAL][Stream] 27.01.2024 13:41:17 [] (unknown:0) - IndexError: list index out of range
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/entriesSubsample.fcsv
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/fakeBrainTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_cortexTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_r_hippoTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_ventriclesTest.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Model_vesselsTestDilate1.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/ObstacleModel.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ObstacleModel.vtk
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_1.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_1.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_10.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_10.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_12.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_12.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_13.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_13.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_13.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_13.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.1_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.1_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_14.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_15.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_15.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_16.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_16.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_17.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_17.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_18.4_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_18.4_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_19.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_19.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_2.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_2.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_20.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_20.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_20.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_20.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_23.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_23.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_24.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_24.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_24.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_24.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_26.3_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_26.3_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_26.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_26.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_28.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_28.9_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_30.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_30.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_31.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_31.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_33.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_33.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_33.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_33.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_34.3_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_34.3_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_34.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_34.8_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_36.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_36.5_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_36.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_36.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_37.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_37.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_38.1_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_38.1_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_46.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_46.0_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_52.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_52.7_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_6.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_6.6_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/qualified_Line_angle_9.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/qualified_Line_angle_9.2_degree.mrk.json
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_cortexTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/r_hippoTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_cortexTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/Segmentationr_hippoTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationventriclesTest.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/SegmentationvesselsTestDilate1.seg.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/targetsSubsample.fcsv
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/ventriclesTest.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Data/vesselsTestDilate1.nrrd
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.mrml
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding: C:/Users/DANG THE HUNG/AppData/Local/slicer.org/Slicer/cache/SlicerIO/__BundleSaveTemp-2024-01-27_134142_191/Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[INFO][VTK] 27.01.2024 13:41:43 [] (unknown:0) - Info: In D:\D\S\S-0\Libs\MRML\Core\vtkArchive.cxx, line 39
Zip: adding rel: Week_2_4_test_2024-01-23/Week_2_4_test_2024-01-23.png
[DEBUG][Qt] 27.01.2024 13:41:43 [] (unknown:0) - saved  "C:/Users/DANG THE HUNG/OneDrive - King's College London/Msc study/7MRI0070 - Navigation in Robotic/Working/Week_2_4_test_2024-01-23.mrb"
[WARNING][Qt] 27.01.2024 13:41:43 [] (unknown:0) - void __cdecl qSlicerSaveDataDialogPrivate::updateStatusIconFromMessageCollection(int,class vtkMRMLMessageCollection *,bool) Data save warning: "- Warning: entriesSubsample (vtkMRMLMarkupsFiducialNode3): fcsv file format only stores control point coordinates and a limited set of display properties.\n- Warning: targetsSubsample (vtkMRMLMarkupsFiducialNode4): fcsv file format only stores control point coordinates and a limited set of display properties.\n"
[DEBUG][Qt] 27.01.2024 13:42:01 [] (unknown:0) - Switch to module:  ""
